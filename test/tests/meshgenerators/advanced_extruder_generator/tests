[Tests]
  [test]
    type = 'Exodiff'
    input = 'gen_extrude.i'
    cli_args = '--mesh-only'
    exodiff = 'gen_extrude_in.e'
    recover = false

    requirement = 'The system shall be able to extrude a mesh with variable height elevations, with variable numbers of layers, and swap subdomain IDs'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#13276 #3554 #5634'
  []
  [test_flip]
    type = 'Exodiff'
    input = 'gen_extrude.i'
    cli_args = 'Mesh/extrude/direction="0 0 -1" --mesh-only gen_extrude_flip_in.e'
    exodiff = 'gen_extrude_flip_in.e'
    recover = false

    requirement = 'The system shall be able to extrude a mesh with variable height elevations, with variable numbers of layers, and swap subdomain IDs in the reverse direction'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#13276 #3554 #5634 #21162'
  []
  [test_boundary]
    type = 'Exodiff'
    input = 'advanced_extruder_with_interface_boundaries.i'
    cli_args = '--mesh-only'
    exodiff = 'advanced_extruder_with_interface_boundaries_in.e'
    recover = false

    requirement = 'The system shall be able to extrude a mesh with variable height elevations, with variable numbers of layers, and swap interface boundaries'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#21852'
  []
  [test_bias]
    type = 'Exodiff'
    input = 'gen_extrude.i'
    cli_args = '--mesh-only gen_extrude_bias_in.e
                Mesh/extrude/biases="1.0 2.0 0.5"'
    exodiff = 'gen_extrude_bias_in.e'
    recover = false

    requirement = 'The system shall be able to extrude a mesh with variable height elevations, with variable numbers of layers, with biased axial element sizes, and swap subdomain IDs'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#21852'
  []
  [prepare_mesh]
    type = 'RunApp'
    input = need-neighbors.i

    requirement = 'The system shall make sure the mesh is prepared after a mesh generator has indicated the mesh is not prepared and before running a solve.'
    issues = '#15944 #15936 #15823'
    design = 'AdvancedExtruderGenerator.md'
  []
  [elem_flip]
    type = 'Exodiff'
    input = elem_flip.i
    cli_args = '--mesh-only'
    exodiff = 'elem_flip_in.e'
    exodiff_opts = '-pedantic'
    recover = false

    requirement = 'The system shall be able to fix the negative-volume elements by flipping them during extrusion.'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#21162'
    mesh_mode = 'REPLICATED'
  []
  [elem_flip_second_order]
    type = 'Exodiff'
    input = elem_flip.i
    cli_args = 'Mesh/gmg/elem_type=QUAD8 --mesh-only elem_flip_second.e'
    exodiff = 'elem_flip_second.e'
    exodiff_opts = '-pedantic'
    recover = false

    requirement = 'The system shall be able to fix the negative-volume second order elements by flipping them during extrusion.'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#21162'
    mesh_mode = 'REPLICATED'
  []
  [extruder_then_parsed_gen_sideset]
    type = 'Exodiff'
    input = advanced_extruder_then_parsed_gen_sideset.i
    cli_args = '--mesh-only'
    exodiff = 'advanced_extruder_then_parsed_gen_sideset_in.e'
    recover = false

    requirement = 'The system shall be able to use the result from AdvancedExtruderGenerator in subsequent mesh generators'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#16902'
    allow_warnings = true # parsed sideset generation isn't fully supported on distributed meshes
  []
  [extruder_with_element_extra_integer_swap]
    type = 'Exodiff'
    input = advanced_extruder_with_element_extra_integer_swap.i
    exodiff = 'advanced_extruder_with_element_extra_integer_swap_out.e'

    requirement = 'The system shall be able to retain and swap element extra integers during extrusion.'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#18087'
  []
  [mixed_extrude]
    type = RunException
    input = gen_extrude.i
    cli_args = 'Mesh/extrude/heights="1 2 -3" --mesh-only'
    expect_err = "Cannot have both positive and negative heights!"

    requirement = "The system shall report an error if missing a consistent positive or negative "
                  "extrusion direction."
    design = "AdvancedExtruderGenerator.md"
    issues = "#21273"
  []
  [extruder_with_boundary_swap]
    type = 'Exodiff'
    input = advanced_extruder_with_boundary_swap.i
    exodiff = 'advanced_extruder_with_boundary_swap_in.e'
    cli_args = '--mesh-only'
    recover = false

    requirement = 'The system shall be able to retain and swap boundary ids during extrusion.'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#21852'
  []
  [helicoidal]
    type = Exodiff
    input = 'helicoidal.i'
    exodiff = 'helicoidal_in.e'
    cli_args = '--mesh-only'
    recover = false

    requirement = 'The system shall be able to helically extrude a 2D mesh into a twisted 3D mesh.'
    design = 'AdvancedExtruderGenerator.md'
    issues = '#25486'
  []

  [errors]
    requirement = 'The system shall error'
    issues = '#22117'
    design = 'AdvancedExtruderGenerator.md'
    [bad_subdomain_swap]
      type = RunException
      input = advanced_extruder_with_boundary_swap.i
      cli_args = "Mesh/extrude/subdomain_swaps='1234 11 2 12 3 13; ; '"
      detail = 'if the source subdomain for a subdomain swap in a layer does not exist in the mesh,'
      expect_err = 'The block \'1234\' was not found within the mesh'
    []
    [bad_boundary_swap]
      type = RunException
      input = advanced_extruder_with_boundary_swap.i
      cli_args = "Mesh/extrude/boundary_swaps='101 11 2 12; ; '"
      detail = 'if the source boundary for a boundary swap in a layer does not exist in the mesh,'
      expect_err = 'The boundary \'101\' was not found within the mesh'
    []
    [bad_upward_source_subdomain]
      type = RunException
      input = advanced_extruder_with_boundary_swap.i
      cli_args = "Mesh/extrude/upward_boundary_source_blocks='1234; ; ' Mesh/extrude/upward_boundary_ids='10; ; '"
      detail = 'if the source subdomain for an upward boundary assignment in a layer does not exist in the mesh,'
      expect_err = 'The block \'1234\' was not found within the mesh'
    []
    [bad_downward_source_subdomain]
      type = RunException
      input = advanced_extruder_with_boundary_swap.i
      cli_args = "Mesh/extrude/downward_boundary_source_blocks='1234; ; ' Mesh/extrude/downward_boundary_ids='1; ; '"
      detail = 'if the source subdomain for an downward boundary assignment in a layer does not exist in the mesh,'
      expect_err = 'The block \'1234\' was not found within the mesh'
    []
  []
[]
