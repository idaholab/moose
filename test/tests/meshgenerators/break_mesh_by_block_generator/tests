[Tests]
  [break_mesh_by_blocks_generator]
    requirement = 'The system shall be able to create separate blocks in a mesh'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#11640 #22117'

    [3d_auto_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_auto.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_auto_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "without a split interface in 3D;"
    []

    [3d_split_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_splittrue.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_splittrue_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a split interface in 3D;"
    []

    [3d_polycrystal_test]
      type = 'Exodiff'
      input = 'break_mesh_3D_polycrystal.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_3D_polycrystal_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a polycrystal based mesh in 3D;"
    []

    [2d_auto_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_auto.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_auto_in.e'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = "without a split interface in 2D;"
    []

    [2d_splittrue_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_splittrue.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_splittrue_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a split interface in 2D; and"
    []

    [polycrystal_test]
      type = 'Exodiff'
      input = 'break_mesh_2DJunction_polycrystal.i'
      cli_args = '--mesh-only'
      exodiff = 'break_mesh_2DJunction_polycrystal_in.e'
      mesh_mode = 'REPLICATED'
      recover = false
      exodiff_opts = '-pedantic'

      detail = "with a polycrystal based mesh in 2D."
    []
  []

  [surrounding_block_restricted]
    requirement = 'The system shall be able to break the mesh between listed blocks:'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#15895'

    [split_transition_only]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=false Mesh/split/split_transition_interface=true '
                 '--mesh-only block_restricted_split_transition_only_in.e'
      exodiff = 'block_restricted_split_transition_only_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'without splitting the interface and with splitting the transition interface;'
    []

    [split_interface_only]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=true --mesh-only '
                 'block_restricted_split_interface_only_in.e'
      exodiff = 'block_restricted_split_interface_only_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface and without splitting the transition interface;'
    []

    [split_all]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/split_interface=true Mesh/split/split_transition_interface=true '
                 '--mesh-only block_restricted_split_all_in.e'
      exodiff = 'block_restricted_split_all_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface and splitting the transition interface;'
    []

    [no_transition]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/add_transition_interface=false --mesh-only '
                 'block_restricted_no_transition_in.e'
      exodiff = 'block_restricted_no_transition_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'with a split interface, without splitting the transition interface, and without a '
               'transition interface;'

    []

    [transition_split]
      type = 'Exodiff'
      input = 'break_mesh_block_restricted.i'
      cli_args = 'Mesh/split/add_transition_interface=false Mesh/split/split_interface=true '
                 '--mesh-only block_restricted_no_transition_split_in.e'
      exodiff = 'block_restricted_no_transition_split_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false

      detail = 'without a split interface, splitting the transition interface, or a transition '
               'interface;'
    []
  []

  [block_pairs_restricted]
    type = 'Exodiff'
    input = 'break_mesh_block_pairs_restricted.i'
    cli_args = '--mesh-only'
    exodiff = 'break_mesh_block_pairs_restricted_in.e'
    exodiff_opts = '-pedantic'
    mesh_mode = 'REPLICATED'
    recover = false
    requirement = 'The system shall be able to break the mesh between listed block pairs.'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#17749'
  []

  [block_pairs_restricted_3blocks]
    requirement = 'The system shall be able to break the mesh between listed block pairs'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#17749'
    [one_new_node]
      type = 'Exodiff'
      input = 'break_mesh_block_pairs_restricted_3blocks.i'
      cli_args = "Mesh/split/block_pairs='0 2' --mesh-only block_pairs_restricted_3blocks_one_new_node_in.e"
      exodiff = 'block_pairs_restricted_3blocks_one_new_node_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false
      detail = 'by creating one new node.'
    []
    [two_new_nodes]
      type = 'Exodiff'
      input = 'break_mesh_block_pairs_restricted_3blocks.i'
      cli_args = "Mesh/split/block_pairs='0 1' --mesh-only block_pairs_restricted_3blocks_two_new_nodes_in.e"
      exodiff = 'block_pairs_restricted_3blocks_two_new_nodes_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false
      detail = 'by creating two new nodes.'
    []
    [three_new_nodes]
      type = 'Exodiff'
      input = 'break_mesh_block_pairs_restricted_3blocks.i'
      cli_args = "Mesh/split/block_pairs='0 2;0 1' --mesh-only block_pairs_restricted_3blocks_three_new_nodes_in.e"
      exodiff = 'block_pairs_restricted_3blocks_three_new_nodes_in.e'
      exodiff_opts = '-pedantic'
      mesh_mode = 'REPLICATED'
      recover = false
      detail = 'by creating three new nodes.'
    []
  []

  [block_pairs_restricted_two_interfaces]
    type = 'Exodiff'
    input = 'break_mesh_block_pairs_restricted.i'
    cli_args = 'Mesh/split/add_interface_on_two_sides=true --mesh-only break_mesh_block_pairs_restricted_two_sides_interfaces_in.e'
    exodiff = 'break_mesh_block_pairs_restricted_two_sides_interfaces_in.e'
    exodiff_opts = '-pedantic'
    mesh_mode = 'REPLICATED'
    recover = false
    requirement = 'The system shall be able to create two sides interface when interfaces are created between listed block pairs.'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#17749'
  []

  [hanging_nodes]
    type = 'Exodiff'
    input = 'hanging_nodes_parallel.i'
    exodiff = 'hanging_nodes_parallel_out.e'
    requirement = 'The system shall properly assign node processor ids for paritioned meshes'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#15793'
    mesh_mode = 'REPLICATED'
    min_parallel = 12
    max_parallel = 12
    recover = false
    cli_args = '--oversubscribe'
  []

  [invalid_block_pair]
    type = RunException
    input = break_mesh_block_pairs_restricted.i
    cli_args = 'Mesh/split/block_pairs="0 missing;2 3"'
    expect_err = "The block 'missing' was not found in the mesh"
    requirement = "The system shall report an error if the mesh does not contain the specified block pair"
    mesh_mode = 'REPLICATED'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#22117'
  []

  [invalid_surrounding_block]
    type = RunException
    input = break_mesh_block_restricted.i
    cli_args = 'Mesh/split/surrounding_blocks="missing"'
    expect_err = "The block 'missing' was not found in the mesh"
    requirement = "The system shall report an error if the mesh does not contain the specified surrounding block"
    mesh_mode = 'REPLICATED'
    design = 'meshgenerators/BreakMeshByBlockGenerator.md'
    issues = '#22117'
  []
[]
