[Tests]
  design = 'BoundaryElementConversionGenerator.md'
  issues = '#31293 #31759'
  [simple_hex8]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'simple_hex8.csv'
    cli_args = 'Outputs/file_base=simple_hex8'
    recover = false
    requirement = 'The system shall be able to convert HEX8 elements so that the single given boundary only contains TRI3 sides.'
  []
  [double_hex8]
    type = CSVDiff
    input = double_conversion.i
    csvdiff = 'double_hex8.csv'
    cli_args = 'Outputs/file_base=double_hex8'
    recover = false
    requirement = 'The system shall be able to convert HEX8 elements so that the single given internal boundary only contains TRI3 sides on both sides'
  []
  [complex_hex8]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'complex_hex8.csv'
    cli_args = 'Outputs/file_base=complex_hex8
                Mesh/trans/boundary_names="left top"'
    recover = false
    requirement = 'The system shall be able to convert HEX8 elements so that the given set of boundaries only contains TRI3 sides.'
  []
  [simple_prism6]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'simple_prism6.csv'
    cli_args = 'Outputs/file_base=simple_prism6
                Mesh/gmg/elem_type=PRISM6'
    recover = false
    requirement = 'The system shall be able to convert PRISM6 elements so that the single given boundary only contains TRI3 sides.'
  []
  [complex_prism6]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'complex_prism6.csv'
    cli_args = 'Outputs/file_base=complex_prism6
                Mesh/gmg/elem_type=PRISM6
                Mesh/trans/boundary_names="left top"'
    recover = false
    requirement = 'The system shall be able to convert PRISM6 elements so that the given set of boundaries only contains TRI3 sides.'
  []
  [simple_pyramid5]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'simple_pyramid5.csv'
    cli_args = 'Outputs/file_base=simple_pyramid5
                Mesh/gmg/elem_type=PYRAMID5
                Postprocessors/v2/enable=false
                Postprocessors/v2/block=0'
    recover = false
    requirement = 'The system shall be able to convert PYRAMID5 elements so that the single given boundary only contains TRI3 sides.'
  []
  [complex_pyramid5]
    type = CSVDiff
    input = simple_conversion.i
    csvdiff = 'complex_pyramid5.csv'
    cli_args = 'Outputs/file_base=complex_pyramid5
                Mesh/gmg/elem_type=PYRAMID5
                Mesh/trans/boundary_names="left top"
                Postprocessors/v2/enable=false
                Postprocessors/v2/block=0'
    recover = false
    requirement = 'The system shall be able to convert PYRAMID5 elements so that the given set of boundaries only contains TRI3 sides.'
  []
  [err_layer_number]
    type = 'RunException'
    input = 'err_simple_conversion.i'
    cli_args = '--mesh-only simple_conversion_err.e
                Mesh/trans/conversion_element_layer_number="10"'
    expect_err = 'There is fewer layers'
    requirement = 'The system shall throw an error if the input mesh does not contain enough layers of elements to be specified to convert.'
  []
  [err_no_boundary]
    type = 'RunException'
    input = 'err_simple_conversion.i'
    cli_args = '--mesh-only simple_conversion_err.e
                Mesh/trans/boundary_names="noexist"'
    expect_err = 'was not found within the mesh'
    requirement = 'The system shall throw an error if the input mesh does not contain the specified boundaries.'
  []
  [err_unsupported_side_type]
    type = 'RunException'
    input = 'err_simple_conversion.i'
    cli_args = '--mesh-only simple_conversion_err.e
                Mesh/gmg/elem_type="HEX20"'
    expect_err = 'non-linear side elements'
    requirement = 'The system shall throw an error if the input mesh contains non-linear side elements.'
  []
  [err_internal_boundary]
    type = 'RunException'
    input = 'err_internal_bdry.i'
    cli_args = '--mesh-only'
    expect_err = 'The provided boundary contains non-external sides'
    requirement = 'The system shall throw an error if the provided boundary is not external when it is asked to check the external boundaries.'
  []
  [err_sid_overflow]
    type = 'RunException'
    input = 'err_simple_conversion.i'
    cli_args = '--mesh-only simple_conversion_err.e
                Mesh/gmg/subdomain_ids="30000"'
    expect_err = 'too large and cause overflow'
    requirement = 'The system shall throw an error if the input mesh contains subdomain ids that are too large.'
  []
[]