[Tests]
  design = 'syntax/Materials/index.md syntax/Outputs/index.md'
  issues = '#1189 #3538'

  [group]
    requirement = "The system shall support the output of material data as field variables including"

    [all]
      type = 'Exodiff'
      input = 'output.i'
      exodiff = 'output_out.e'

      detail = 'outputting all properties within a material definition;'
    []
    [ad_all]
      type = 'Exodiff'
      input = 'output.i'
      exodiff = 'ad_output_out.e'
      cli_args = "Materials/test_material/type=ADOutputTestMaterial Outputs/file_base=ad_output_out"
      detail = 'outputting all AD properties within a material definition;'
    []
    [all_via_outputs]
      # Test the ability for Output objects to enable all material property output
      type = 'Exodiff'
      input = 'output_via_outputs.i'
      exodiff = 'output_via_outputs_out.e'

      detail = 'outputting all properties from the output definition;'
    []
    [limit_via_outputs]
      # Test the ability for Output objects to enable specific material property outputs
      type = 'Exodiff'
      input = 'limited_via_outputs.i'
      exodiff = 'limited_via_outputs_out.e'

      detail = 'outputting certain properties within a material definition;'
    []
    [block_via_outputs]
      # Test the ability for Output objects to enable specific material property outputs across blocks
      type = 'Exodiff'
      input = 'block_via_outputs.i'
      exodiff = 'block_via_outputs_out.e'

      detail = 'outputting certain properties within the output definition on a subdomain;'
    []
    [block]
      type = 'Exodiff'
      input = 'output_block.i'
      exodiff = 'output_block_out.e'

      detail = 'outputting certain properties within the material definition on a subdomain;'
    []
    [block_displaced]
      type = 'Exodiff'
      input = 'output_block_displaced.i'
      exodiff = 'output_block_displaced_exodus.e'

      detail = 'outputting certain properties within the material definition on a subdomain with a '
               'displaced configuration;'
    []
    [boundary]
      type = 'Exodiff'
      input = 'output_boundary.i'
      exodiff = 'output_boundary_out.e'

      detail = 'outputting certain properties within the material definition on a boundary;'
    []
    [multiple_files]
      type = Exodiff
      input = output_multiple_files.i
      exodiff = 'output_exodus1_mat_block1.e output_exodus2_mat_block2.e'
      cli_args = "Materials/block_1/outputs=exodus1
                  Outputs/exodus1/file_base='output_exodus1_mat_block1'
                  Outputs/exodus2/file_base='output_exodus2_mat_block2'"
      detail = 'outputting certain properties within the material definition to different files;'
    []
    [multiple_materials_single_file]
      type = Exodiff
      input = output_multiple_files.i
      exodiff = 'output_exodus1_mat_both.e output_exodus2_varonly.e'
      cli_args = "Materials/block_1/outputs=exodus1
                  Materials/block_2/outputs=exodus1
                  Outputs/exodus1/file_base='output_exodus1_mat_both'
                  Outputs/exodus2/file_base='output_exodus2_varonly'
                  Outputs/exodus2/hide=''"
      detail = 'outputting certain properties within the material definition to a single file in the presence of multiple output files;'
    []
    [multiple_files_output_exodus]
      type = Exodiff
      input = output_multiple_files.i
      exodiff = 'output_exodus1_mat_block1_with_var.e output_exodus2_varonly.e'
      cli_args = "Materials/block_1/outputs=exodus
                  Materials/block_2/outputs=none
                  Outputs/inactive=exodus1
                  Outputs/exodus=true
                  Outputs/file_base=output_exodus1_mat_block1_with_var
                  Outputs/exodus2/file_base=output_exodus2_varonly
                  Outputs/exodus2/hide=''"
      # output_properties set then outputs=none
      allow_warnings = true
      detail = 'outputting certain properties within the material definition to a single file using the "exodus" keyword in the presence of multiple output files;'
    []
    [multiple_files_output_all]
      type = Exodiff
      input = output_multiple_files.i
      exodiff = 'output_exodus1_mat_block1.e output_exodus2_mat_block1.e'
      cli_args = "Materials/block_2/outputs=none
                  Outputs/exodus1/file_base=output_exodus1_mat_block1
                  Outputs/exodus2/file_base=output_exodus2_mat_block1"
      # output_properties set then outputs=none
      allow_warnings = true
      detail = 'outputting certain properties within the material definition to a single file using the "all" keyword in the presence of multiple output files;'
    []
    [multiple_files_output_explicit]
      type = Exodiff
      input = output_multiple_files.i
      exodiff = 'output_exodus1_mat_block1.e output_exodus2_mat_block1.e'
      cli_args = "Materials/block_1/outputs='exodus1 exodus2'
                  Materials/block_2/outputs=none
                  Outputs/exodus1/file_base=output_exodus1_mat_block1
                  Outputs/exodus2/file_base=output_exodus2_mat_block1"
      # output_properties set then outputs=none
      allow_warnings = true
      detail = 'outputting certain properties within the material definition to multiple files by explicitly specifying multiple output names; and'
    []
    [steady]
      type = Exodiff
      input = 'output_steady.i'
      exodiff = 'output_steady_out.e'

      detail = 'outputting properties for steady-state simulations.'
    []
  []

  [data_types]
    requirement = "The system shall support the output as auxiliary field variables of "
    [ad_vector]
      type = Exodiff
      input = output.i
      exodiff = 'vector_output.e'
      cli_args = "Outputs/file_base='vector_output' Materials/active='vector' Materials/vector/type=ADGenericConstantVectorMaterial Materials/vector/prop_names='p1 p2' Materials/vector/prop_values='0 1 2 1.2 3.4 -1' Materials/vector/outputs='exodus'"
      detail = 'automatic differentiation vector material properties'
    []
  []

  [output_types]
    requirement = "The system shall support material property output to output objects of type "
    [vtk]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=vtk
                  Outputs/vtk=true
                  Outputs/file_base=output_vtk"
      detail = "VTK."
      vtk = true
    []
    [nemesis]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=nemesis
                  Outputs/nemesis=true
                  Outputs/exodus=false
                  Outputs/file_base=output_nemesis"
      detail = "Nemesis."
    []
    [tecplot]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=tecplot
                  Outputs/tecplot=true
                  Outputs/file_base=output_tecplot"
      detail = "Tecplot."
    []
    [xda]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=xda
                  Outputs/xda=true
                  Outputs/file_base=output_xda"
      detail = "XDA."
    []
    [xdr]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=xdr
                  Outputs/xdr=true
                  Outputs/file_base=output_xdr"
      detail = "XDR."
    []
    [checkpoint]
      type = RunApp
      input = output.i
      cli_args = "Materials/test_material/outputs=checkpoint
                  Outputs/checkpoint=true
                  Outputs/file_base=output_checkpoint"
      detail = "Checkpoint."
    []
  []

  [duplicate_variable_name]
    type = RunException
    input = output_steady.i
    expect_err = "The material property output real_property has the same name as an existing variable, either use the material declare_suffix parameter to disambiguate"
    cli_args = "AuxVariables/real_property/order=CONSTANT AuxVariables/real_property/family=MONOMIAL"
    requirement = "The system shall report an error if an existing variable shares the same name as an auxiliary variable used for material output"
  []
  [invalid_material_outputs]
    type = RunException
    input = output.i
    expect_err = "The output object 'garbage' is not a defined output object"
    cli_args = 'Materials/test_material/outputs=garbage'

    requirement = "The system shall report an error if the supplied output options for material data output "
                  "are not consistent with the list of available outputs."
  []
  [missing_outputs]
    type = RunException
    input = output.i
    expect_err = "Material properties output specified is not created because 'outputs' is not set in the Material, and neither is Outputs/output_material_properties"
    cli_args = "Materials/active='out'
                Materials/out/type=OutputTestMaterial
                Materials/out/variable=u
                Materials/out/output_properties='vector_property'"
    requirement = "The system shall report a warning if the supplied output options for material properties do "
                  "not generate an output."
  []
  [invalid_material_output_exodus]
    type = RunException
    input = output.i
    expect_err = "The output object 'exodus' is not a defined output object"
    cli_args = 'Materials/test_material/outputs=exodus Outputs/exodus=false'

    requirement = "The system shall report an error if the 'exodus' output option for material data output "
                  "is invoked when Outputs/exodus=false"
  []
  [invalid_material_output_unsupported]
    type = RunException
    input = output.i
    expect_err = "The output object 'console' does not support material output."
    cli_args = 'Materials/test_material/outputs=console Outputs/console=true'

    requirement = "The system shall report an error if the output option for material data output "
                  "is not one that supports material output"
  []
  [invalid_output_multiple_reserved_names]
    type = RunException
    input = output.i
    expect_err = "When setting output name to reserved name 'none', only one entry is allowed in outputs parameter"
    cli_args = "Materials/test_material/outputs='none exodus'"

    requirement = "The system shall report an error if multiple output values are provided and one of those values is a reserved name"
  []
  [warn_unsupported_types]
    type = RunApp
    input = output_warning.i
    allow_warnings = true
    expect_out = "The types for total 1 material properties:\n  vec\nare not supported for automatic output by MaterialOutputAction"
    requirement = "The system shall issue warnings if material data added by materials cannot be outputted as field variables."
  []
  [show_added_aux_vars]
    type = RunApp
    input = output_warning.i
    allow_warnings = true
    expect_out = "The following total 145 aux variables:"
    requirement = "The system shall show the field variable names for outputting material data added by materials."
    prereq = warn_unsupported_types
  []
  [dont_show_added_aux_vars]
    type = RunApp
    input = output_warning.i
    cli_args = Outputs/print_automatic_aux_variable_creation=false
    allow_warnings = true
    absent_out = "The following total 145 aux variables:"
    requirement = "The system shall be able to not show the field variable names for outputting material data added by materials."
    prereq = show_added_aux_vars
  []
[]
