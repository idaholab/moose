[Tests]
  issues = '#23740 #27240'
  design = 'syntax/Executioner/TimeSteppers/index.md AddTimeStepperAction.md '
  'ComposeTimeStepperAction.md'

 [time_stepper_system]
  requirement = 'The system shall support the ability to use multiple time steppers'
    [multiple_time_steppers]
      type = CSVDiff
      input = 'multiple_timesteppers.i'
      csvdiff = 'multiple_timesteppers.csv'
      detail = 'using the minimum time step size of input time steppers,'
    []

    [multiple_time_timesequence]
      type = CSVDiff
      recover = false
      input = 'multiple_timesequences.i'
      csvdiff = 'multiple_timesequences.csv'
      detail = 'with specific times to hit and still hit all of them,'
    []

    [AB2PredictorCorrector]
      type = Exodiff
      input = 'AB2PredictorCorrector.i'
      exodiff = 'aee_out.e'
      rel_err = 0.003
      detail = 'AB2PredictorCorrector as one of the input time steppers,'
    []

    [lower_bound]
      type = CSVDiff
      input = 'lower_bound.i'
      csvdiff = 'lower_bound.csv'
      detail = 'and provide a (usually growing) lower bound of the time step size,'
    []

    [controls]
      type = CSVDiff
      input = 'active_timesteppers.i'
      csvdiff = 'active_timesteppers.csv'
      detail = 'and allow the user to activate/deactivate timesteppers using control block,'
    []
  []

  [restart]
    requirement = 'The system shall support the ability to run a calculation for the purpose of '
                  'creating a time sequence recover file:'
    [timestepper_pre]
      type = 'RunApp'
      input = 'time_stepper_system_restart.i'
      recover = false

      detail = 'when writing the checkpoint file,'
    []

    [timestepper_restart]
      type = CSVDiff
      input = 'time_stepper_system.i'
      csvdiff = 'time_stepper_restart.csv'
      recover = false
      prereq = 'restart/timestepper_pre'

      detail = 'restart from the checkpoint file.'
    []
  []

  [error_message]
    requirement = 'The system shall provide meaningful error message when: '
    [lower_bound]
      type = RunException
      input = 'lower_bound.i'
      cli_args = 'Executioner/TimeSteppers/lower_bound=FooDT'
      expect_err = "Failed to find a timestepper with the name 'FooDT'"
      detail ="time stepper name(s) provided for lower_bound dosen't exist,"
    []

    [active_timesteppers]
      type = RunException
      input = 'active_timesteppers.i'
      cli_args = "Controls/c1/disable_objects='TimeStepper::ConstDT2 TimeStepper::ConstDT1'"
      expect_err = "No TimeStepper\(s\) are currently active to compute a timestep"
      detail ='no time steppers are active to compute a timestep,'
    []

    [input_hierarchy]
      type = RunException
      input = 'timestepper_input_error.i'
      expect_err = "unused parameter 'Executioner/TimeSteppers/time_sequence'"
      detail = 'the syntax for multiple time steppers is used without an additional nested block for the time stepper'
    []

    [rejectStep]
      type = RunException
      input = 'testRejectStep.i'
      allow_test_objects = True
      expect_err = "rejectStep\(\) calls from TestSourceStepper"
      detail = 'the corresponding rejectStep() function is called when solve fails'
    []
  []

[]
