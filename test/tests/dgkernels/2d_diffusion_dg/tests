[Tests]
  issues = '#869'
  design = 'source/bcs/DGFunctionDiffusionDirichletBC.md source/dgkernels/DGDiffusion.md'
  [test]
    type = 'Exodiff'
    input = '2d_diffusion_dg_test.i'
    exodiff = 'out.e-s003'
    requirement = "The system shall support solving 2D diffusion using the discontinuous Galerkin "
                  "method."
  []
  [p_refinement_test]
    type = 'Exodiff'
    input = '2d_diffusion_dg_test.i'
    cli_args = 'Outputs/file_base=p_refinement Executioner/Adaptivity/adaptivity_type=p'
    exodiff = 'p_refinement.e-s003'
    requirement = "The system shall support solving 2D diffusion using the discontinuous Galerkin "
                  "method with p-refinement."
    issues = '#869 #24141'
  []
  [constMonomial]
    type = 'Exodiff'
    input = '2d_diffusion_dg_test.i'
    exodiff = 'constMonomial.e-s003'
    cli_args = 'Outputs/file_base=constMonomial Variables/u/order=CONSTANT'
    issues = '#21314'
    requirement = "The system shall support solving 2D diffusion using the discontinuous Galerkin "
                  "method with constant monomial shape functions."
  []
  [stateful_props]
    type = 'RunApp'
    input = 'dg_stateful.i'
    requirement = 'DGKernels shall coexist with stateful material properties'
    issues = '#11766'
    design = 'DGKernels/index.md'
  []
  [no_mallocs_during_scaling]
    type = 'RunApp'
    input = '2d_diffusion_dg_test.i'
    cli_args = 'Executioner/automatic_scaling=true Outputs/exodus=false Outputs/csv=false -snes_view'
    absent_out = 'MatSetValues calls =[1-9]'
    requirement = 'The system shall not perform memory allocation automatic scaling when computing values using discontinuous finite element methods.'
    issues = '#12601'
    design = 'FEProblemSolve.md'
    max_parallel = 4 # Can't have zero dofs on any process for MatResetPreallocation
  []
  [proper_ghosting_with_action_serial]
    type = 'Exodiff'
    input = 'no_mallocs_with_action.i'
    exodiff = 'no_mallocs_with_action_out.e'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'When objects that need one layer of coupling (like DGKernels) are added via action, we shall ensure that we have added a proper relationship manager and thus incur no mallocs during calls to MatSetValues. We will not apply algebraic ghosting nor reinitialize system vectors in serial, but we will reinitialize the matrix sparsity'
    mesh_mode = replicated
    max_parallel = 1
  []
  [proper_ghosting_with_action_parallel]
    type = 'Exodiff'
    input = 'no_mallocs_with_action.i'
    exodiff = 'no_mallocs_with_action_parallel.e'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'When objects that need one layer of coupling (like DGKernels) are added via action, we shall ensure that we have added a proper relationship manager and thus incur no mallocs during calls to MatSetValues. We will also apply algebraic ghosting in parallel which will require reinitializing the system; the sparsity pattern will also have to be reinitialized'
    mesh_mode = replicated
    min_parallel = 2
    cli_args = 'Outputs/file_base=no_mallocs_with_action_parallel'
  []
  [no_additional_rms]
    type = 'Exodiff'
    input = 'no_functor_additions.i'
    exodiff = 'no_functor_additions_out.e'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'If a RelationshipManager with sufficient coverage has already been added through a MooseObjectAction, then the CouplingFunctorCheck action shall not add any relationship managers, avoiding reinitialization of system vectors and the system matrix'
    mesh_mode = replicated
  []
  [proper_ghosting_with_action_serial_distributed]
    type = 'Exodiff'
    input = 'no_mallocs_with_action.i'
    exodiff = 'no_mallocs_with_action_distributed.e'
    cli_args = 'Outputs/file_base=no_mallocs_with_action_distributed'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'This test shall have one more rm than its replicated counter part because of the geometric-only GhostPointNeighbors rm, also demonstrating no mallocs. Sparsity will be reinitialized but not vectors'
    mesh_mode = distributed
    max_parallel = 1
  []
  [proper_ghosting_with_action_parallel_distributed]
    type = 'Exodiff'
    input = 'no_mallocs_with_action.i'
    exodiff = 'no_mallocs_with_action_parallel_distributed.e'
    cli_args = 'Outputs/file_base=no_mallocs_with_action_parallel_distributed'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'This test shall have one more rm than its replicated counter part because of the geometric-only GhostPointNeighbors rm, also demonstrating no mallocs. Sparsity and vectors will both be reinitialized'
    mesh_mode = distributed
    min_parallel = 2
  []
  [no_additional_rms_distributed]
    type = 'Exodiff'
    input = 'no_functor_additions.i'
    exodiff = 'no_functor_additions_distributed.e'
    cli_args = 'Outputs/file_base=no_functor_additions_distributed'
    issues = '#13736'
    design = 'RelationshipManager.md'
    requirement = 'This test shall have one more rm than its replicated counter part because of the geometric-only GhostPointNeighbors rm, also demonstrating no addition of rms by the CouplingFunctorCheckAction'
    mesh_mode = distributed
  []
[]
