[Tests]
  issues = '#39655'

  [./testdirichlet]
    type = Exodiff
    input = 'gpu_2d_diffusion_test.i'
    exodiff = 'out_gpu.e'
    requirement = 'The Kokkos system shall provide an ability to solve a 2D diffusion problem with Dirichlet boundary conditions.'
    design = '/DirichletBC.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]

  [./testneumann]
    type = Exodiff
    input = 'gpu_2d_diffusion_neumannbc_test.i'
    exodiff = 'neumannbc_out_gpu.e'
    requirement = 'The Kokkos system shall provide an ability to solve a 2D diffusion problem with Neumann boundary conditions.'
    design = '/NeumannBC.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]

  [./testbodyforce]
    type = Exodiff
    input = 'gpu_2d_diffusion_bodyforce_test.i'
    exodiff = 'bodyforce_out_gpu.e'
    requirement = 'The Kokkos system shall provide an ability to solve a 2D diffusion problem including a volumetric source term.'
    design = '/BodyForce.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]

  [./test_jacobian]
    type = PetscJacobianTester
    input = 'gpu_2d_diffusion_test.i'
    cli_args = 'Outputs/exodus=false'
    recover = false
    requirement = 'The Kokkos system shall provide a tester that checks hand-coded Jacobian against finite difference Jacobian using -snes_type=test option.'
    design = 'framework_stp.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]

  [./test_force_iteration]
    type = Exodiff
    input = 'gpu_2d_diffusion_test.i'
    exodiff = 'out_gpu.e'
    cli_args = 'Executioner/nl_abs_tol=1e+1 Executioner/petsc_options_iname=-snes_force_iteration Executioner/petsc_options_value=1'
    prereq = testdirichlet
    requirement = 'The Kokkos system shall force the solver to take at least one iteration regardless of the initial residual norm when the snes_force_iteration option is specified.'
    design = 'Transient.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]

  [./actual_linear_solver]
    type = RunApp
    input = 'gpu_2d_diffusion_test.i'
    cli_args = 'Executioner/solve_type=linear Outputs/exodus=false'
    absent_out = 'Nonlinear \|R\|'
    requirement = 'The Kokkos system shall not compute an extra residual if the linear solver is used.'
    design = 'FEProblem.md'
    capabilities = 'kokkos'
    devices = 'cuda'
  [../]
[]
