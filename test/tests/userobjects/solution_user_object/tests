[Tests]
  issues = '#7244'
  design = 'SolutionUserObject.md'

  [discontinuous_value_solution_uo_p1]
    type = 'Exodiff'
    input = 'discontinuous_value_solution_uo_p1.i'
    exodiff = 'discontinuous_value_solution_uo_p1.e'

    requirement = 'The system shall be capable of writing out a solution file with both continuous and discontinuous fields for the purpose of verifying that ability to read those solutions back into a new simulation.'
  []
  [discontinuous_value_solution_uo_p2]
    type = 'CSVDiff'
    input = 'discontinuous_value_solution_uo_p2.i'
    csvdiff = 'discontinuous_value_solution_uo_p2.csv'
    prereq = discontinuous_value_solution_uo_p1

    requirement = 'The system shall be capable of reading in field information and producing gradient values from both continuous and discontinuous fields.'
  []
  [test_scalar]
    type = RunApp
    cli_args = 'UserObjects/soln/mesh=gold/testscalarrename.e UserObjects/soln/system_variables=""'
    input = 'discontinuous_value_solution_uo_p2.i'
    issues = '#15992'
    requirement = "The system shall not create scalar variables from global variables that have a name that matches a field variables's name when importing a solution from an exodus file"
  []

  [write_exodus_second_order]
    type = RunApp
    input = "write_exodus_second_order.i"
    issues = "#30729"
    requirement = "The system shall be capable of writing out a second-order mesh containing second-order variables that will be read in for a subsquent analysis."
  []
  [read_exodus_second_order]
    type = Exodiff
    input = "read_exodus_second_order.i"
    exodiff = "read_exodus_second_order_out.e"
    prereq = "write_exodus_second_order"
    issues = "#30729"
    requirement = "The system shall be capable of reading second-order variable data from a previous solution."
  []

  [write_exodus_initial]
    type = RunApp
    input = "write_exodus_initial.i"
    issues = "#31238"
    requirement = "The system shall be capable of writing out a constant monomial function on initial time."
  []
  [read_exodus_initial]
    type = Exodiff
    input = "read_exodus_initial.i"
    exodiff = "read_exodus_initial_out.e"
    prereq = "write_exodus_initial"
    issues = "#31238"
    requirement = "The system shall be able to read in a variable from a previous exodus file that only has fiels at time 0."
  []

  [write_exodus_multiple_vars]
    type = RunApp
    prereq = 'read_exodus_initial'
    input = "write_exodus_initial.i"
    # Create more than 1 timestep and more than 1 variable
    cli_args = "AuxVariables/var1/initial_condition=2 AuxVariables/var2/initial_condition=1
                AuxKernels/v1/type=FunctionAux AuxKernels/v1/variable=var1 AuxKernels/v1/function='2+t'
                AuxKernels/v2/type=FunctionAux AuxKernels/v2/variable=var2 AuxKernels/v2/function='1+t'
                Executioner/type=Transient Executioner/num_steps=10"
    issues = "#31238"
    requirement = "The system shall be capable of writing out a constant monomial function on initial time."
  []
  [read_exodus_multiple_vars]
    type = Exodiff
    input = "read_exodus_multiple_vars.i"
    exodiff = "read_exodus_multiple_vars_out.e"
    prereq = "write_exodus_multiple_vars"
    issues = "#31238 sssss"
    requirement = "The system shall be able to read in a variable from a previous exodus file, leveraging caching and time step interpolation."
  []
[]
