[Tests]
  design = 'syntax/Problem/index.md'
  [./MFEMCurlCurl]
    type = XMLDiff
    input = curlcurl.i
    xmldiff = 'OutputData/CurlCurl/Run0/Run0.pvd
                OutputData/CurlCurl/Run0/Cycle000001/proc000000.vtu'
    requirement = 'Platypus shall have the ability to solve a definite Maxwell problem with Nedelec elements of the first kind and produce results consistent with MFEM Example 3'
  []
  [./MFEMDiffusion]
    type = XMLDiff
    input = diffusion.i
    xmldiff = 'OutputData/Diffusion/Run0/Run0.pvd
                OutputData/Diffusion/Run0/Cycle000001/proc000000.vtu'
    requirement = 'Platypus shall have the ability to solve a diffusion problem set up from MOOSE and produce the same result as a native run.'
  []
  [./MFEMDiffusionPartial]
  type = XMLDiff
  input = diffusion_partial.i
  xmldiff = 'OutputData/Diffusion/Run0/Run0.pvd
              OutputData/Diffusion/Run0/Cycle000001/proc000000.vtu'
  requirement = 'Platypus shall have the ability to solve a diffusion problem with partial assembly set up from MOOSE and produce the same result as a native run.'
  []
  [./MFEMHeatConduction]
    type = XMLDiff
    input = heatconduction.i
    xmldiff = 'OutputData/HeatConduction/Run0/Run0.pvd
                OutputData/HeatConduction/Run0/Cycle000001/proc000000.vtu
                OutputData/HeatConduction/Run0/Cycle000004/proc000000.vtu'
    requirement = 'Platypus shall have the ability to solve a transient heat conduction problem set up from MOOSE and produce the same result as a native run.'
  []
  [./MFEMHeatTransfer]
    type = XMLDiff
    input = heattransfer.i
    xmldiff = 'OutputData/HeatTransfer/Run0/Run0.pvd
                OutputData/HeatTransfer/Run0/Cycle000003/proc000000.vtu'
    requirement = 'Platypus shall have the ability to solve a transient heat conduction problem with a heat transfer coefficient on one boundary set up from MOOSE.'
  []    
[]
