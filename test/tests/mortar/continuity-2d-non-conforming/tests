[Tests]
  design = 'Constraints/index.md'
  issues = '#13080 #15215'
  [soln-continuity]
    type = 'Exodiff'
    input = 'soln-continuity.i'
    exodiff = 'soln-continuity_out.e'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case using the mortar method, e.g. the primal variable values across the mortar interface shall be the same.'
  []
  [dual-soln-continuity]
    type = 'Exodiff'
    input = 'dual-soln-continuity.i'
    exodiff = 'dual-soln-continuity_out.e'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case using the first order dual basis.'
  []
  [dual-soln-continuity-2nd-order]
    type = 'Exodiff'
    input = 'dual-soln-continuity.i'
    exodiff = 'dual-soln-continuity-2nd-order_out.e'
    cli_args = 'Mesh/second_order=true Variables/T/order=SECOND Variables/lambda/order=SECOND Outputs/file_base=dual-soln-continuity-2nd-order_out'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case using the second order dual basis.'
  []
  [soln-continuity-fine]
    type = 'Exodiff'
    input = 'soln-continuity.i'
    exodiff = 'soln-continuity-fine_out.e'
    cli_args = 'Mesh/file/file=nodal_normals_test_offset_nonmatching_gap_fine.e Outputs/file_base=soln-continuity-fine_out'
    requirement = 'We shall be able to produce the expected result for a fine mesh solution continuity test case using the mortar method, e.g. the primal variable values across the mortar interface shall be the same.'
  []
  [soln-continuity-jac]
    type = PetscJacobianTester
    input = 'soln-continuity.i'
    run_sim = True
    difference_tol = 1e-7
    requirement = 'The Jacobian for the solution continuity test case shall be perfect'
    prereq = 'soln-continuity'
  []
  [soln-continuity-pg]
    type = 'Exodiff'
    input = 'soln-continuity-pg.i'
    exodiff = 'soln-continuity-pg_out.e'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case using the Petrov-Galerkin approach for mortar.'
  []
  [sequencing-stateful-soln-continuity]
    type = 'Exodiff'
    input = 'sequencing-stateful-soln-continuity.i'
    exodiff = 'sequencing-stateful-soln-continuity_out.e-s002 sequencing-stateful-soln-continuity_out.e-s003'
    mesh_mode = 'REPLICATED'
    requirement = 'The system shall be able to prolong and restrict stateful material properties because of mesh adaptivity in the presense of lower dimensional subdomains that do not have materials and when stateful properties are needed on boundaries.'
    max_threads = 1 # periodic failure with threads. will need more investigation
  []
  [vcp]
    type = 'Exodiff'
    input = 'dual-soln-continuity-vcp.i'
    exodiff = 'dual-soln-continuity_out.e'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case with the first order dual basis using VCP.'
    mesh_mode = 'replicated'
  []
  [vcp-2nd-order]
    type = 'Exodiff'
    input = 'dual-soln-continuity-vcp.i'
    exodiff = 'dual-soln-continuity-2nd-order_out.e'
    cli_args = 'Mesh/second_order=true Variables/T/order=SECOND Variables/lambda/order=SECOND Outputs/file_base=dual-soln-continuity-2nd-order_out'
    requirement = 'We shall be able to produce the expected result for a solution continuity test case with the second order dual basis using VCP.'
    mesh_mode = 'replicated'
  []
[]
