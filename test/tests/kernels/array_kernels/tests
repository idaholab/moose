[Tests]
  issues = '#6881 #14057 #23123 #31506'
  design = '/variables/ArrayMooseVariable.md'
  [test]
    type = 'Exodiff'
    input = 'array_diffusion_test.i'
    exodiff = 'array_diffusion_test_out.e'
    requirement = 'The system shall provide array diffusion kernels on an array variable.'
  []
  [test_ad]
    type = 'Exodiff'
    input = 'ad_array_diffusion_test.i'
    exodiff = 'ad_array_diffusion_test_out.e'
    requirement = 'The system shall provide an array diffusion automatic differentiation kernel for an array variable.'
  []
  [test_ad_jac]
    type = 'PetscJacobianTester'
    input = 'ad_array_diffusion_test.i'
    run_sim = true
    requirement = 'The system shall compute an exact Jacobian for an array diffusion kernel implemented with automatic differentiation.'
  []
  [test_diffusion_reaction]
    type = 'Exodiff'
    input = 'array_diffusion_reaction.i'
    exodiff = 'array_diffusion_reaction_out.e'
    requirement = 'The system shall provide array reaction kernels on an array variable.'
  []
  [test_ad_diffusion_reaction]
    type = 'Exodiff'
    input = 'ad_array_diffusion_reaction.i'
    exodiff = 'ad_array_diffusion_reaction_out.e'
    requirement = 'The system shall provide an array reaction automatic differentiation kernel that operates on an array variable.'
  []
  [test_ad_diffusion_reaction_jac]
    type = 'PetscJacobianTester'
    input = 'ad_array_diffusion_reaction.i'
    run_sim = True
    requirement = 'The system shall compute an exact Jacobian for an array reaction kernel implemented with automatic differentiation.'
  []
  [test_diffusion_reaction_dg]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_dg.i'
    exodiff = 'array_diffusion_reaction_dg_out.e'
    requirement = 'The system shall provide array DG diffusion kernels on an elemental array variable.'
  []
  [test_diffusion_reaction_coupling]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_coupling.i'
    exodiff = 'array_diffusion_reaction_coupling_out.e'
    requirement = 'The system shall provide coupling of standard variables in array kernels.'
  []
  [test_diffusion_reaction_other_coupling]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_other_coupling.i'
    exodiff = 'array_diffusion_reaction_other_coupling_out.e'
    requirement = 'The system shall provide coupling of array variables in standard kernels.'
  []
  [save_in]
    requirement = 'The system shall provide residual save-in and Jacobian diagonal save-in for'
    [array]
      type = 'Exodiff'
      input = 'array_save_in.i'
      exodiff = 'array_save_in_out.e'

      detail = 'array and'
    []
    [test_standard_save_in]
      # using standard variables to produce the exact output of the previous test
      type = 'Exodiff'
      input = 'standard_save_in.i'
      exodiff = 'array_save_in_out.e'
      prereq = save_in/array

      detail = 'standard variables.'
    []
  []
  [test_diffusion_reaction_transient]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_transient.i'
    exodiff = 'array_diffusion_reaction_transient_out.e'
    requirement = 'The system shall provide array time derivative kernels on an array variable.'
  []
  [test_body_force]
    type = 'Exodiff'
    input = 'array_body_force.i'
    exodiff = 'array_body_force_out.e'
    requirement = 'The system shall provide array body-force kernels on an array variable.'
  []

  [test_array_custom_coupling]
    type = 'RunApp'
    input = 'array_custom_coupling_test.i'
    max_parallel = 1
    # This test is to match the values of the assembled Jacobian.
    # Before fixing the second bug reportted in #23123 the last row for u_1 is:
    # row 63: (44, 0.)  (45, 0.)  (46, 0.0833333)  (47, 0.166667)  (56, -0.0833333)  (57, -0.666667)  (58, -1.33333)  (59, -0.166667)  (60, 0.336458)  (61, -0.331771)  (62, 0.169792)  (63, 2.33958)
    expect_out = 'row 63\: \(44\, 0.\)  \(45\, 0.\)  \(46\, 0.083333\d+\)  \(47\, 0.16666\d+\)  \(56\, -0.083333\d+\)  \(57\, -0.66666\d+\)  \(58\, -1.3333\d+\)  \(59\, -0.16666\d+\)  \(60\, 0.33680\d+\)  \(61\, -0.33159\d+\)  \(62\, 0.17013\d+\)  \(63\, 2.3402\d+\)'
    requirement = 'The system shall assemble the Jacobian properly with array variables.'
  []
[]
