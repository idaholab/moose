[Tests]
  issues = '#16028 #16320 #25501 #26604 #26979'

  [elem_type]
    requirement = 'The system shall support the mesh output of traced rays on meshes of element types '
    design = 'RayTracingMeshOutput.md'

    [quad4]
      type = 'Exodiff'
      input = 'ray_mesh_output.i'
      exodiff = 'quad4_rays.e'
      cli_args = 'Outputs/rays/file_base=quad4_rays'

      detail = 'QUAD4,'
    []
    [tri3]
      type = 'Exodiff'
      input = 'ray_mesh_output.i'
      exodiff = 'tri3_rays.e'
      cli_args = 'Mesh/gmg/elem_type=TRI3
                  Outputs/rays/file_base=tri3_rays'
      detail = 'TRI3,'
    []
    [hex8]
      type = 'Exodiff'
      input = 'ray_mesh_output_3d.i'
      exodiff = 'hex8_rays.e'
      cli_args = 'Outputs/rays/file_base=hex8_rays'
      detail = 'HEX8, and'
    []
    [tet4]
      type = 'Exodiff'
      input = 'ray_mesh_output_3d.i'
      exodiff = 'tet4_rays.e'
      cli_args = 'Mesh/gmg/elem_type=tet4
                  Outputs/rays/file_base=tet4_rays'
      detail = 'TET4.'
    []
  []

  [transient]
    type = Exodiff
    input = 'ray_mesh_output_transient.i'
    exodiff = 'ray_mesh_output_transient_rays.e
               ray_mesh_output_transient_rays.e-s0001
               ray_mesh_output_transient_rays.e-s0002
               ray_mesh_output_transient_rays.e-s0003'
    requirement = 'The system shall support the mesh output of traced rays into the exodus format for a transient simulation'
    design = 'RayTracingExodus.md RayTracingMeshOutput.md'
  []

  [nemesis]
    type = Exodiff
    input = 'ray_mesh_output.i'
    cli_args = 'Mesh/Partitioner/type=GridPartitioner
                Mesh/Partitioner/nx=2
                Mesh/Partitioner/ny=2
                Outputs/rays/type=RayTracingNemesis
                Outputs/rays/output_properties="ray_id intersections pid processor_crossings trajectory_changes"
                Outputs/rays/file_base=nemesis_rays'
    exodiff = 'nemesis_rays.e.4.0 nemesis_rays.e.4.1 nemesis_rays.e.4.2 nemesis_rays.e.4.3'
    min_parallel = 4
    max_parallel = 4
    recover = false
    requirement = 'The system shall support the mesh output of traced rays using the Nemesis format.'
    design = 'RayTracingNemesis.md RayTracingMeshOutput.md'
  []

  [nemesis_transient]
    type = Exodiff
    input = 'ray_mesh_output_transient.i'
    cli_args = 'Mesh/Partitioner/type=GridPartitioner
                Mesh/Partitioner/nx=2
                Mesh/Partitioner/ny=2
                Outputs/rays/type=RayTracingNemesis
                Outputs/rays/output_properties="intersections pid processor_crossings trajectory_changes"
                Outputs/rays/file_base=ray_mesh_output_transient_nemesis_rays'
    # Missing some files here beacuse exodiff doesn't like diffing empty output,
    # which is the case for the early transient when not all procs are hit
    exodiff = 'ray_mesh_output_transient_nemesis_rays.e.4.0
               ray_mesh_output_transient_nemesis_rays.e.4.1
               ray_mesh_output_transient_nemesis_rays.e-s0001.4.0
               ray_mesh_output_transient_nemesis_rays.e-s0001.4.1
               ray_mesh_output_transient_nemesis_rays.e-s0002.4.0
               ray_mesh_output_transient_nemesis_rays.e-s0002.4.1
               ray_mesh_output_transient_nemesis_rays.e-s0002.4.3
               ray_mesh_output_transient_nemesis_rays.e-s0003.4.0
               ray_mesh_output_transient_nemesis_rays.e-s0003.4.1
               ray_mesh_output_transient_nemesis_rays.e-s0003.4.2
               ray_mesh_output_transient_nemesis_rays.e-s0003.4.3'
    min_parallel = 4
    max_parallel = 4
    requirement = 'The system shall support the mesh output of traced rays into the nemesis format for a transient simulation'
    design = 'RayTracingNemesis.md RayTracingMeshOutput.md'
    # cannot do recover because we don't have a single exodus file, the first two timesteps won't exist
    recover = false
  []

  [no_segments]
    design = 'RayTracingMeshOutput.md'
    requirement = 'The system shall support the mesh output of traced rays using the fewest segments possible to represent the trace in '
    [exodus]
      type = Exodiff
      input = 'ray_mesh_output.i'
      cli_args = 'Mesh/Partitioner/type=GridPartitioner
                  Mesh/Partitioner/ny=3
                  UserObjects/study/segments_on_cache_traces=false
                  Outputs/rays/output_properties="ray_id intersections pid processor_crossings trajectory_changes"
                  Outputs/rays/file_base=no_segments_rays'
      exodiff = 'no_segments_rays.e'
      min_parallel = 3
      max_parallel = 3
      recover = false
      detail = 'Exodus format and'
    []
    [nemesis]
      type = Exodiff
      input = 'ray_mesh_output.i'
      cli_args = 'Mesh/Partitioner/type=GridPartitioner
                  Mesh/Partitioner/ny=2
                  Outputs/rays/type=RayTracingNemesis
                  UserObjects/study/segments_on_cache_traces=false
                  Outputs/rays/output_properties="ray_id intersections pid processor_crossings trajectory_changes"
                  Outputs/rays/file_base=no_segments_nemesis_rays'
      exodiff = 'no_segments_nemesis_rays.e.2.0 no_segments_nemesis_rays.e.2.1'
      min_parallel = 2
      max_parallel = 2
      recover = false
      detail = 'in Nemesis format.'
    []
  []

  [data]
    requirement = 'The system shall support the output of ray data when outputting rays in a mesh format using'
    design = 'RayTracingMeshOutput.md'
    [exodus]
      type = Exodiff
      input = 'ray_mesh_output_data.i'
      exodiff = 'ray_mesh_output_data_rays.e ray_mesh_output_data_rays_nodal.e'
      detail = 'exodus and'
    []
    [nemesis]
      type = Exodiff
      input = 'ray_mesh_output_data.i'
      cli_args = 'Mesh/Partitioner/type=GridPartitioner
                  Mesh/Partitioner/nx=2
                  Outputs/rays/type=RayTracingNemesis
                  Outputs/rays_nodal/type=RayTracingNemesis'
      exodiff = 'ray_mesh_output_data_rays.e.2.0 ray_mesh_output_data_rays.e.2.1 ray_mesh_output_data_rays_nodal.e.2.0 ray_mesh_output_data_rays_nodal.e.2.1'
      min_parallel = 2
      max_parallel = 2
      recover = false
      detail = 'nemesis formats.'
    []
  []

  [data_specific]
    requirement = 'The system shall support, in the output of rays in a mesh format, the output of specific'
    design = 'RayTracingMeshOutput.md'
    [data]
      type = Exodiff
      input = 'ray_mesh_output_data.i'
      exodiff = 'ray_mesh_output_data_specific.e ray_mesh_output_data_specific_nodal.e'
      cli_args = "UserObjects/study/ray_data_names='foo'
                  UserObjects/study/initial_ray_data='5; 6; 7; 8'
                  Outputs/rays/output_data=false
                  Outputs/rays/output_data_names='foo'
                  Outputs/rays/file_base=ray_mesh_output_data_specific
                  Outputs/rays_nodal/output_data=false
                  Outputs/rays_nodal/output_data_names='foo'
                  Outputs/rays_nodal/file_base=ray_mesh_output_data_specific_nodal"
      detail = 'ray data'
    []
    [aux_data]
      type = Exodiff
      input = 'ray_mesh_output_data.i'
      exodiff = 'ray_mesh_output_aux_data_specific.e'
      cli_args = "UserObjects/study/ray_aux_data_names='test_aux foo'
                  UserObjects/study/initial_ray_aux_data='1 5; 2 6; 3 7; 4 8'
                  Outputs/active=rays
                  Outputs/rays/output_aux_data=false
                  Outputs/rays/output_aux_data_names='foo'
                  Outputs/rays/file_base=ray_mesh_output_aux_data_specific"
      detail = 'ray aux data'
    []
  []

  [errors]
    requirement = 'The system shall report an error when ouputting rays in a mesh format when'
    design = 'RayTracingMeshOutput.md'

    [no_cached_data]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'Outputs/rays/output_data=true'
      expect_err = "In order to output Ray data in output 'rays', the RayTracingStudy 'study' must set data_on_cache_traces = true"

      detail = 'ray data is requested to be output but it is not cached,'
    []
    [no_cached_aux_data]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'Outputs/rays/output_aux_data=true'
      expect_err = "In order to output Ray aux data in output 'rays', the RayTracingStudy 'study' must set aux_data_on_cache_traces = true"

      detail = 'aux data is requested to be output but it is not cached,'
    []
    [data_nodal_no_data]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/data_on_cache_traces=true
                  Outputs/rays/output_data_nodal=true'
      expect_err = "Cannot be used unless there is data to output"

      detail = 'nodal data is requested but data is not requested,'
    []
    [nodal_no_segments]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/data_on_cache_traces=true
                  UserObjects/study/segments_on_cache_traces=false
                  Outputs/rays/output_data=true
                  Outputs/rays/output_data_nodal=true'
      expect_err = "Not supported when study segments_on_cache_traces = false"

      detail = 'nodal data is requested to be output but segment-wise information is not cached,'
    []
    [data_all_and_specific]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/data_on_cache_traces=true
                  Outputs/rays/output_data=true
                  Outputs/rays/output_data_names=unused'
      expect_err = "Cannot be used in addition to 'output_data_names'"

      detail = 'all data and specific data are both requested,'
    []
    [aux_data_all_and_specific]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/aux_data_on_cache_traces=true
                  Outputs/rays/output_aux_data=true
                  Outputs/rays/output_aux_data_names=unused'
      expect_err = "Cannot be used in addition to 'output_aux_data_names'"

      detail = 'all aux data and specific aux data are both requested'
    []
    [missing_data]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/data_on_cache_traces=true
                  UserObjects/study/always_cache_traces=true
                  Outputs/rays/output_data_names=no_exist'
      expect_err = "The ray data 'no_exist' is not registered"

      detail = 'requesting to output data and the data does not exist'
    []
    [missing_aux_data]
      type = RunException
      input = 'ray_mesh_output_errors.i'
      cli_args = 'UserObjects/study/aux_data_on_cache_traces=true
                  UserObjects/study/always_cache_traces=true
                  Outputs/rays/output_aux_data_names=no_exist'
      expect_err = "The ray aux data 'no_exist' is not registered"

      detail = 'requesting to output aux data and the aux data does not exist'
    []
  []

  [no_segments_warning]
    type = RunException
    input = 'ray_mesh_output_errors.i'
    expect_err = "No cached trace segments were found in the study 'study'."

    design = 'RayTracingMeshOutput.md'
    requirement = 'The system shall report a warning when rays are requested to be output in a mesh format but cached ray inforamtion is not found.'
  []

  [stationary]
    type = Exodiff
    input = 'stationary.i'
    exodiff = 'stationary_rays.e stationary_rays.e-s0001 stationary_rays.e-s0002'
    design = 'RayTracingMeshOutput.md'
    requirement = 'The system shall support the mesh output of stationary rays'
  []
[]
