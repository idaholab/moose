[Tests]
  [GrandPotentialPFM]
    type = 'Exodiff'
    input = 'GrandPotentialPFM.i'
    exodiff = 'GrandPotentialPFM_out.e'
    issues = '#6977'
    design = '/GrandPotentialKernelAction.md'
    requirement = 'The system shall provide classes to implement a Grand Potential phase field '
                  'formulation'
  []
  [GrandPotentialMultiphase]
    type = 'Exodiff'
    input = 'GrandPotentialMultiphase.i'
    exodiff = 'GrandPotentialMultiphase_out.e'
    issues = '#8213'
    design = '/ACSwitching.md'
    requirement = 'The system shall provide a Grand Potential based multiphase model'
  []
  [GrandPotentialAnisotropy]
    type = 'Exodiff'
    input = 'GrandPotentialAnisotropy.i'
    exodiff = 'GrandPotentialAnisotropy_out.e'
    abs_zero = 1e-8
    issues = '#11802 #12554'
    design = '/ACInterface2DMultiPhase1.md /ACInterface2DMultiPhase2.md '
             '/InterfaceOrientationMultiphaseMaterial.md'
    requirement = 'The system shall provide a Grand Potential based dendritic solidification '
                  'capability in 2D'
  []
  [GrandPotentialStrictMassConservation]
    type = 'Exodiff'
    input = 'GrandPotentialStrictMassConservation.i'
    exodiff = 'GrandPotentialStrictMassConservation_out.e'
    custom_cmp = GrandPotentialStrictMassConservation.cmp
    issues = '#23329'
    design = '/GrandPotentialKernelAction.md'
    requirement = 'The system shall provide classes to implement a Grand Potential phase field '
                  'formulation with strict mass conservation'
    method = '!dbg'
  []
  [GrandPotentialInterface]
    type = 'CSVDiff'
    input = 'GrandPotentialInterface.i'
    csvdiff = 'GrandPotentialInterface_out_mat_0001.csv'
    issues = '#12147'
    design = '/GrandPotentialInterface.md'
    requirement = 'The system shall provide a material to automatically compute grand potential '
                  'model interface parameters based on provided interfacial free energies and widths'
    valgrind = 'heavy'
  []
  [GrandPotentialAnisotropyAntitrap]
    type = 'Exodiff'
    input = 'GrandPotentialAnisotropyAntitrap.i'
    exodiff = 'GrandPotentialAnisotropyAntitrap_out.e'
    issues = '#13373'
    design = '/AntitrappingCurrent.md'
    requirement = 'The system shall provide a Grand Potential based dendritic solidification '
                  'capability for alloy with antitrapping current'
  []
  [SinteringBase]
    type = 'Exodiff'
    input = 'SinteringBase.i'
    exodiff = 'SinteringBase_out.e'
    issues = '#18420'
    design = '/GrandPotentialSinteringMaterial.md'
    installation_type = in_tree
    requirement = 'The system shall provide a Grand Potential based sintering model'
  []
  [SinteringParabolic]
    type = 'Exodiff'
    input = 'SinteringParabolic.i'
    exodiff = 'SinteringParabolic_out.e'
    issues = '#18420'
    design = '/GrandPotentialSinteringMaterial.md'
    requirement = 'The system shall provide a Grand Potential based sintering model with parabolic '
                  'defect free energies'
  []
  [SinteringDilute]
    type = 'Exodiff'
    input = 'SinteringDilute.i'
    exodiff = 'SinteringDilute_out.e'
    issues = '#18420'
    design = '/GrandPotentialSinteringMaterial.md'
    requirement = 'The system shall provide a Grand Potential based sintering model with dilute '
                  'solution defect free energies'
  []
  [SinteringIdeal]
    type = 'Exodiff'
    input = 'SinteringIdeal.i'
    exodiff = 'SinteringIdeal_out.e'
    issues = '#18420'
    design = '/GrandPotentialSinteringMaterial.md'
    requirement = 'The system shall provide a Grand Potential based sintering model with ideal '
                  'solution defect free energies'
  []

  [GrandPotentialMultiphase_ad]
    type = 'Exodiff'
    input = 'GrandPotentialMultiphase_AD.i'
    exodiff = 'GrandPotentialMultiphase_out.e'
    issues = '#15573'
    design = '/ACSwitching.md /CoupledSwitchingTimeDerivative.md'
    requirement = 'MOOSE shall provide a Grand Potential based multiphase model with AD option'
  []

  [ADGrandPotentialMultiphase_jac]
    type = 'PetscJacobianTester'
    input = 'GrandPotentialMultiphase_AD.i'
    run_sim = 'True'
    cli_args = 'Outputs/exodus=false Executioner/num_steps=1'
    ratio_tol = 1e-7
    difference_tol = 1e-4
    issues = '#15573'
    design = '/ACSwitching.md /CoupledSwitchingTimeDerivative.md'
    requirement = 'The jacobian for the AD Allen-Cahn problem with a variable dependent coeffecients shall be perfect'
  []
[]
