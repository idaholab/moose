[Tests]
  design = 'meshgenerators/PinMeshGenerator.md'
  issues = '#19949'
  [square]
    requirement = 'The system shall generate a 2D square pin mesh with fuel, gap, clad, background regions'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Mesh/pin1/ring_radii='0.3385 0.3705 0.4665'
                Mesh/pin1/mesh_intervals='1 1 1 1'
                Mesh/pin1/region_ids='1 2 3 4'
                Mesh/pin1/num_sectors='4'
                Outputs/file_base=pin_only_in"
    exodiff = 'pin_only_in.e'
    recover = false
  []
  [square_rid_as_block_name]
    requirement = 'The system shall generate a 2D square pin mesh with fuel, gap, clad, background regions, with separate block names assigned based on region IDs in the mesh'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Mesh/rmp/region_id_as_block_name=true
                Mesh/pin1/ring_radii='0.3385 0.3705 0.4665'
                Mesh/pin1/mesh_intervals='1 1 1 1'
                Mesh/pin1/region_ids='1 2 3 4'
                Mesh/pin1/num_sectors='4'
                Outputs/file_base=pin_rid_as_block_name"
    exodiff = 'pin_rid_as_block_name.e'
    recover = false
  []
  [square_rid_as_block_name_err]
    requirement = 'The system shall throw an error when generating a pin mesh with manually defined block names and being set to automatically define block names based on region IDs'
    type = 'RunException'
    input = 'pin_square.i'
    cli_args = "Mesh/rmp/region_id_as_block_name=true
                Mesh/pin1/ring_radii='0.3385 0.3705 0.4665'
                Mesh/pin1/mesh_intervals='1 1 1 1'
                Mesh/pin1/region_ids='1 2 3 4'
                Mesh/pin1/num_sectors='4'
                Mesh/pin1/block_names='1 2 3 4'"
    expect_err = 'block_names should not be specified in PinMeshGenerator'
  []
  [2d_square_w_3d_info]
    requirement = 'The system shall throw an error if 3d info is provided to a 2d mesh'
    type = 'RunException'
    input = 'pin_square.i'
    cli_args = "Mesh/rmp/axial_mesh_intervals='5'"
    expect_err = "should not be defined for 2-D meshes"
  []
  [tri]
    requirement = 'The system shall generate a 2D square pin mesh with ring and background region and tri center elements'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Mesh/pin1/mesh_intervals='1 1'
                Mesh/pin1/region_ids='1 2'
                Mesh/pin1/ring_radii='0.4665'
                Outputs/file_base=pin_only_tri_in"
    exodiff = 'pin_only_tri_in.e'
    recover = false
  []
  [tri_intervals]
    requirement = 'The system shall generate a pin mesh with more than 1 radial region and tri center elements'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Mesh/pin1/mesh_intervals='2 1'
                Mesh/pin1/region_ids='1 2'
                Mesh/pin1/ring_radii='0.4665'
                Outputs/file_base=pin_only_tri_intervals_in"
    exodiff = 'pin_only_tri_intervals_in.e'
    recover = false
  []
  [quad_intervals]
    requirement = 'The system shall generate a pin mesh with more than 1 radial region and quad center elements'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Mesh/pin1/quad_center_elements=true
                Mesh/pin1/mesh_intervals='2 1'
                Mesh/pin1/region_ids='1 2'
                Mesh/pin1/ring_radii='0.4665'
                Outputs/file_base=pin_only_quad_intervals_in"
    exodiff = 'pin_only_quad_intervals_in.e'
    recover = false
  []
  [background_tri_intervals]
    requirement = 'The system shall generate a pin mesh with no radial region and more than 1 background intervals with tri center elements'
    type = 'Exodiff'
    input = 'pin_square.i'
    cli_args = "Outputs/file_base=pin_only_background_tri_intervals_in"
    exodiff = 'pin_only_background_tri_intervals_in.e'
    recover = false
  []
  [hex]
    requirement = 'The system shall generate a 2D hexagonal pin mesh with 2 radial regions'
    type = 'Exodiff'
    input = 'pin_hex.i'
    cli_args = "Outputs/file_base=pin_only_hex_in"
    exodiff = 'pin_only_hex_in.e'
    recover = false
  []
  [complex]
    requirement = 'The system shall generate a 3D hexagonal pin mesh with radial, background, and duct regions'
    type = 'Exodiff'
    input = 'pin_hex.i'
    cli_args = "Mesh/rmp/dim=3
                Mesh/rmp/axial_regions='1.0 1.0'
                Mesh/rmp/axial_mesh_intervals='1 1'
                Mesh/rmp/top_boundary_id=201
                Mesh/rmp/bottom_boundary_id=202
                Mesh/pin1/region_ids='11 12 13; 11 12 13'
                Mesh/pin1/pin_type=1
                Mesh/pin1/ring_radii='0.4665'
                Mesh/pin1/duct_halfpitch='0.68'
                Mesh/pin1/mesh_intervals='1 1 1'
                Mesh/pin1/extrude=true
                Outputs/file_base=pin_only_hex_complex_in"
    exodiff = 'pin_only_hex_complex_in.e'
    recover = false
  []
  design = 'meshgenerators/PinMeshGenerator.md'
  issues = '#19990'
  [hex_pin_homogenized_quad]
    requirement = 'The system shall generate a 2D hexagonal homogenized pin mesh with quad discretization'
    type = 'Exodiff'
    input = 'pin_homogenized.i'
    cli_args = "Outputs/file_base=hex_pin_homogenized_quad"
    exodiff = 'hex_pin_homogenized_quad.e'
    recover = false
  []
  [hex_pin_homogenized_tri]
    requirement = 'The system shall generate a 2D hexagonal homogenized pin mesh with tri discretization'
    type = 'Exodiff'
    input = 'pin_homogenized.i'
    cli_args = "Mesh/pin1/quad_center_elements=false
                Outputs/file_base=hex_pin_homogenized_tri"
    exodiff = 'hex_pin_homogenized_tri.e'
    recover = false
  []
  [hex_pin_homogenized_3d]
    requirement = 'The system shall generate a 3D hexagonal homogenized pin mesh with quad discretization'
    type = 'Exodiff'
    input = 'pin_homogenized.i'
    cli_args = "Mesh/rmp/dim=3
                Mesh/rmp/axial_regions='1.0'
                Mesh/rmp/top_boundary_id=201
                Mesh/rmp/bottom_boundary_id=202
                Mesh/rmp/axial_mesh_intervals='1'
                Mesh/pin1/extrude=true
                Outputs/file_base=hex_pin_homogenized_3d"
    exodiff = 'hex_pin_homogenized_3d.e'
    recover = false
  []
  [hex_single_assembly_homogenized]
    requirement = 'The system shall generate a 2D hexagonal homogenized pin mesh that is treated as a single assembly'
    type = 'Exodiff'
    input = 'single_pin_assembly.i'
    cli_args = "Outputs/file_base=hex_single_assembly_homogenized"
    exodiff = 'hex_single_assembly_homogenized.e'
    recover = false
  []
  [hex_single_assembly_ducted]
    requirement = 'The system shall generate a 2D hexagonal ducted pin mesh that is treated as a single assembly'
    type = 'Exodiff'
    input = 'single_pin_assembly.i'
    cli_args = "Mesh/pin1/homogenized=false
                Mesh/pin1/num_sectors=2
                Mesh/pin1/region_ids='1 2 3'
                Mesh/pin1/ring_radii='2.0'
                Mesh/pin1/duct_halfpitch='3.0'
                Mesh/pin1/mesh_intervals='1 1 1'
                Outputs/file_base=hex_single_assembly_ducted"
    exodiff = 'hex_single_assembly_ducted.e'
    recover = false
  []
  [cart_single_assembly_ducted]
    requirement = 'The system shall generate a 2D Cartesian ducted pin mesh that is treated as a single assembly'
    type = 'Exodiff'
    input = 'single_pin_assembly.i'
    cli_args = "Mesh/rmp/geom='Square'
                Mesh/pin1/homogenized=false
                Mesh/pin1/num_sectors=2
                Mesh/pin1/region_ids='1 2 3'
                Mesh/pin1/ring_radii='2.0'
                Mesh/pin1/duct_halfpitch='3.0'
                Mesh/pin1/mesh_intervals='1 1 1'
                Outputs/file_base=cart_single_assembly_ducted"
    exodiff = 'cart_single_assembly_ducted.e'
    recover = false
  []
  design = 'meshgenerators/PinMeshGenerator.md'
  issues = '#31733'
  [csg]
    requirement = 'The system shall generate the Constructive Solid Geoemtry (CSG) representation of a '
    [2d_hex]
      detail = '2D hexgaonal pin as a CSG object'
      type = JSONDiff
      input = pin_hex.i
      cli_args = 'Outputs/file_base=pin_hex_2d
                  --csg-only'
      recover = false
      jsondiff = pin_hex_2d_csg.json
      mesh_mode = REPLICATED
    []
    [3d_hex]
      detail = '3D hexgaonal pin as a CSG object'
      type = JSONDiff
      input = pin_hex.i
      cli_args = "Mesh/rmp/dim=3
                  Mesh/rmp/axial_regions='1.0 1.0'
                  Mesh/rmp/axial_mesh_intervals='1 1'
                  Mesh/rmp/top_boundary_id=201
                  Mesh/rmp/bottom_boundary_id=202
                  Mesh/pin1/region_ids='11 12 13; 11 12 13'
                  Mesh/pin1/pin_type=1
                  Mesh/pin1/ring_radii='0.4665'
                  Mesh/pin1/duct_halfpitch='0.68'
                  Mesh/pin1/mesh_intervals='1 1 1'
                  Mesh/pin1/extrude=true
                  Outputs/file_base=pin_hex_3d
                  --csg-only"
      recover = false
      jsondiff = pin_hex_3d_csg.json
      mesh_mode = REPLICATED
    []
    [2d_square]
      detail = '2D square pin as a CSG object'
      type = JSONDiff
      input = pin_square.i
      cli_args = "Mesh/pin1/ring_radii='0.3385 0.3705 0.4665'
                  Mesh/pin1/mesh_intervals='1 1 1 1'
                  Mesh/pin1/region_ids='1 2 3 4'
                  Mesh/pin1/num_sectors='4'
                  Outputs/file_base=pin_square_2d
                  --csg-only"
      recover = false
      jsondiff = pin_square_2d_csg.json
      mesh_mode = REPLICATED
    []
    [3d_square]
      detail = '3D square pin as a CSG object'
      type = JSONDiff
      input = pin_square.i
      cli_args = "Mesh/rmp/dim=3
                  Mesh/rmp/axial_regions='1.0 1.0'
                  Mesh/rmp/axial_mesh_intervals='1 1'
                  Mesh/rmp/top_boundary_id=201
                  Mesh/rmp/bottom_boundary_id=202
                  Mesh/pin1/region_ids='1 2 3 4; 5 6 7 8'
                  Mesh/pin1/ring_radii='0.3385 0.3705 0.4665'
                  Mesh/pin1/mesh_intervals='1 1 1 1'
                  Mesh/pin1/extrude=true
                  Outputs/file_base=pin_square_3d
                  --csg-only"
      recover = false
      jsondiff = pin_square_3d_csg.json
      mesh_mode = REPLICATED
    []
    [2d_hex_homogenized]
      detail = 'homogenized 2D hexagonal pin as a CSG object'
      type = JSONDiff
      input = pin_homogenized.i
      cli_args = "Outputs/file_base=pin_hex_homogenized_2d
                  --csg-only"
      jsondiff = pin_hex_homogenized_2d_csg.json
      recover = false
      mesh_mode = REPLICATED
    []
    [3d_hex_homogenized]
      detail = 'homogenized 3D hexagonal pin as a CSG object'
      type = JSONDiff
      input = pin_homogenized.i
      cli_args = "Mesh/rmp/dim=3
                  Mesh/rmp/axial_regions='1.0'
                  Mesh/rmp/top_boundary_id=201
                  Mesh/rmp/bottom_boundary_id=202
                  Mesh/rmp/axial_mesh_intervals='1'
                  Mesh/pin1/extrude=true
                  Outputs/file_base=pin_hex_homogenized_3d
                  --csg-only"
      jsondiff = pin_hex_homogenized_3d_csg.json
      recover = false
      mesh_mode = REPLICATED
    []
    [2d_hex_single_assembly]
      detail = '2D hexagonal pin that behaves as a single assembly'
      type = JSONDiff
      input = single_pin_assembly.i
      cli_args = "Mesh/pin1/homogenized=false
                  Mesh/pin1/num_sectors=2
                  Mesh/pin1/region_ids='1 2 3'
                  Mesh/pin1/ring_radii='2.0'
                  Mesh/pin1/duct_halfpitch='3.0'
                  Mesh/pin1/mesh_intervals='1 1 1'
                  Outputs/file_base=pin_hex_single_assembly
                  --csg-only"
      jsondiff = pin_hex_single_assembly_csg.json
      recover = false
      mesh_mode = REPLICATED
    []
    [2d_square_single_assembly]
      detail = '2D square pin that behaves as a single assembly'
      type = JSONDiff
      input = single_pin_assembly.i
      cli_args = "Mesh/rmp/geom='Square'
                  Mesh/pin1/homogenized=false
                  Mesh/pin1/num_sectors=2
                  Mesh/pin1/region_ids='1 2 3'
                  Mesh/pin1/ring_radii='2.0'
                  Mesh/pin1/duct_halfpitch='3.0'
                  Mesh/pin1/mesh_intervals='1 1 1'
                  Outputs/file_base=pin_square_single_assembly
                  --csg-only"
      jsondiff = pin_square_single_assembly_csg.json
      recover = false
      mesh_mode = REPLICATED
    []
  []
[]
