[Tests]
  design = 'meshgenerators/RevolveGenerator.md'
  issues = '#27699'
  [test]
    requirement = 'The system shall '
    [simple_tri]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri.e'
      exodiff = 'simple_revolve_tri.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI3 elements'
    []
    [simple_tri6]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_tri6.e
                  Mesh/gmg/elem_type=TRI6'
      exodiff = 'revolve_2d_tri6.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI6 elements'
    []
    [simple_tri7]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_tri7.e
                  Mesh/gmg/elem_type=TRI7'
      exodiff = 'revolve_2d_tri7.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI7 elements'
    []
    [simple_quad8_1]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_quad8_1.e
                  Mesh/gmg/elem_type=QUAD8'
      exodiff = 'revolve_2d_quad8_1.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD8 elements along an axis overlapped with edges of some elements'
    []
    [simple_quad8_2]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_quad8_2.e
                  Mesh/gmg/elem_type=QUAD8
                  Mesh/rg/axis_direction="-1.0 1.0 0.0"'
      exodiff = 'revolve_2d_quad8_2.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD8 elements along an axis overlapped with a node of the 2D mesh'
    []
    [simple_quad9_1]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_quad9_1.e
                  Mesh/gmg/elem_type=QUAD9'
      exodiff = 'revolve_2d_quad9_1.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD9 elements along an axis overlapped with edges of some elements'
    []
    [simple_quad9_2]
      type = 'Exodiff'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only revolve_2d_quad9_2.e
                  Mesh/gmg/elem_type=QUAD9
                  Mesh/rg/axis_direction="-1.0 1.0 0.0"'
      exodiff = 'revolve_2d_quad9_2.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD9 elements along an axis overlapped with a node of the 2D mesh'
    []
    [simple_tri_270]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri_270.e
                  Mesh/rg/revolving_angles=270.0
                  Mesh/rg/start_boundary=123
                  Mesh/rg/end_boundary=456
                  Mesh/rg/preserve_volumes=true'
      exodiff = 'simple_revolve_tri_270.e'
      recover = false
      detail = 'generate a 3D mesh by partially revolving a simple 2D mesh with TRI3 elements clockwise'
    []
    [simple_tri_-270]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri_-270.e
                  Mesh/rg/revolving_angles=270.0
                  Mesh/rg/clockwise=false'
      exodiff = 'simple_revolve_tri_-270.e'
      recover = false
      detail = 'generate a 3D mesh by partially revolving a simple 2D mesh with TRI3 elements counterclockwise'
    []
    [simple_tri_vol_preserve]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri_vp.e
                  Mesh/rg/preserve_volumes=true'
      exodiff = 'simple_revolve_tri_vp.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI3 elements using radius correction to preserve volumes'
    []
    [simple_tri_on_axis_1]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri_oa.e
                  Mesh/rg/axis_point="0.0 1.15470053838 0.0"
                  Mesh/rg/axis_direction="1.0 0.0 0.0"'
      exodiff = 'simple_revolve_tri_oa.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI3 elements along an axis overlapped with a node of the 2D mesh'
    []
    [simple_tri_on_axis_2]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_tri_oa_2.e
                  Mesh/rg/axis_point="-1.0 0.0 0.0"
                  Mesh/rg/axis_direction="0.0 1.0 0.0"'
      exodiff = 'simple_revolve_tri_oa_2.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with TRI3 elements along an axis overlapped with an edge of an element of the 2D mesh'
    []
    [simple_quad]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_quad.e
                  Mesh/shg/element_type=QUAD'
      exodiff = 'simple_revolve_quad.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD4 elements'
    []
    [simple_quad_on_axis_1]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_quad_oa.e
                  Mesh/rg/axis_point="0.0 1.15470053838 0.0"
                  Mesh/rg/axis_direction="1.0 0.0 0.0"
                  Mesh/shg/element_type=QUAD'
      exodiff = 'simple_revolve_quad_oa.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD4 elements along an axis overlapped with a node of the 2D mesh'
    []
    [simple_quad_on_axis_2]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_quad_oa_2.e
                  Mesh/rg/axis_point="-1.0 0.0 0.0"
                  Mesh/rg/axis_direction="0.0 1.0 0.0"
                  Mesh/shg/element_type=QUAD'
      exodiff = 'simple_revolve_quad_oa_2.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with QUAD4 elements along an axis overlapped with an edge of an element of the 2D mesh'
    []
    [simple_hybrid]
      type = 'Exodiff'
      input = 'simple_revolve.i'
      cli_args = '--mesh-only simple_revolve_hybrid.e
                  Mesh/shg/element_type=HYBRID
                  Mesh/shg/block_id="100 200"
                  Mesh/shg/block_name="block_tri block_quad"
                  Mesh/shg/radial_intervals=2'
      exodiff = 'simple_revolve_hybrid.e'
      recover = false
      detail = 'generate a 3D mesh by fully revolving a simple 2D mesh with mixed TRI3 and QUAD4 elements'
    []
    [multi_tri]
      type = 'Exodiff'
      input = 'multi_revolve.i'
      cli_args = '--mesh-only multi_revolve_tri.e'
      exodiff = 'multi_revolve_tri.e'
      recover = false
      detail = 'generate a 3D mesh that consists multiple azimuthal sections by fully revolving a simple 2D mesh with TRI3 elements'
    []
    [multi_tri_partial]
      type = 'Exodiff'
      input = 'multi_revolve.i'
      cli_args = '--mesh-only multi_revolve_tri_partial.e
                  Mesh/rg/revolving_angles="120 180"'
      exodiff = 'multi_revolve_tri_partial.e'
      recover = false
      detail = 'generate a 3D mesh that consists multiple azimuthal sections by partially revolving a simple 2D mesh with TRI3 elements'
    []
    [ei_swap]
      type = 'Exodiff'
      input = 'ei_swap.i'
      exodiff = 'ei_swap_out.e'
      recover = false
      detail = 'generate a 3D mesh by revolving a 2D mesh with the original element extra integers retained and swapped'
    []
    [revolve_1d]
      type = 'Exodiff'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only revolve_1d_in.e'
      exodiff = 'revolve_1d_in.e'
      recover = false
      detail = 'generate a 2D mesh by revolving a simple 1D mesh with EDGE2 elements'
    []
    [revolve_1d_single]
      type = 'Exodiff'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only revolve_1d_s_in.e
                  Mesh/gmg/nx=1'
      exodiff = 'revolve_1d_s_in.e'
      recover = false
      detail = 'generate a 2D mesh by revolving a simple 1D mesh with a single EDGE2 element'
      # Only one element
      max_parallel = 1
    []
    [revolve_1d_second]
      type = 'Exodiff'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only revolve_1d_sec_in.e
                  Mesh/gmg/elem_type=EDGE3'
      exodiff = 'revolve_1d_sec_in.e'
      recover = false
      detail = 'generate a 2D mesh by revolving a simple 1D mesh with EDGE3 elements'
    []
    [revolve_1d_single_second]
      type = 'Exodiff'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only revolve_1d_s_sec_in.e
                  Mesh/gmg/nx=1
                  Mesh/gmg/elem_type=EDGE3'
      exodiff = 'revolve_1d_s_sec_in.e'
      recover = false
      detail = 'generate a 2D mesh by revolving a simple 1D mesh with a single EDGE3 element'
      # Only one element
      max_parallel = 1
    []
  []
  [error]
    requirement = "The system shall throw an error if "
    [err_3d_input]
      type = 'RunException'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only err_revolve_2d.e
                  Mesh/gmg/dim=3'
      expect_err = 'This mesh generator only works for 1D and 2D input meshes.'
      detail = "if input mesh has an inappropriate dimension."
    []
    [err_1d_nonverticle]
      type = 'RunException'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only err_revolve_1d.e
                  Mesh/rg/axis_direction="-1.0 1.0 0.0"'
      expect_err = 'The 1D input mesh is not perpendicular to the rotation axis'
      detail = "if input 1D mesh is not perpendicular to the rotation axis."
    []
    [err_input_centroid_on_axis]
      type = 'RunException'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only err_revolve_1d.e
                  Mesh/rg/axis_point="0.5 0.0 0.0"'
      expect_err = 'The input mesh is either across the axis or overlapped with the axis'
      detail = "if the input 1D mesh has its centroid overlapped with the rotation axis."
    []
    [err_1d_input_across_axis]
      type = 'RunException'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only err_revolve_1d.e
                  Mesh/rg/axis_point="0.3 0.0 0.0"'
      expect_err = 'The input mesh is across the axis'
      detail = "if the input 1D mesh is across the rotation axis."
    []
    [err_2d_input_across_axis]
      type = 'RunException'
      input = 'revolve_2d.i'
      cli_args = '--mesh-only err_revolve_2d.e
                  Mesh/rg/axis_point="0.3 0.0 0.0"'
      expect_err = 'The input mesh is across the axis'
      detail = "if the input 2D mesh is across the rotation axis."
    []
    [err_input_off_plane]
      type = 'RunException'
      input = 'revolve_1d.i'
      cli_args = '--mesh-only err_revolve_1d.e
                  Mesh/rg/axis_point="0.0 0.0 1.0"'
      expect_err = 'The input mesh is not in the same plane with the rotation axis'
      detail = "the input 1D mesh is not coplanar to the rotation axis."
    []
    [err_bad_block_swap]
      type = 'RunException'
      input = 'multi_revolve.i'
      cli_args = "--mesh-only bad_swap.e
                  Mesh/rg/subdomain_swaps=' ;13021 300 13021 400'"
      expect_err = 'Source subdomain 13021 was not found in the mesh'
      detail = "the source subdomain for a subdomain swap does not exist in the mesh."
    []
  []
[]
