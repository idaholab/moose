//* This file is part of the MOOSE framework
//* https://www.mooseframework.org
//*
//* All rights reserved, see COPYRIGHT for full restrictions
//* https://github.com/idaholab/moose/blob/master/COPYRIGHT
//*
//* Licensed under LGPL 2.1, please see LICENSE for details
//* https://www.gnu.org/licenses/lgpl-2.1.html

#pragma once

#include "ReactorGeometryMeshBuilderBase.h"

/**
 * Mesh generator for defining a reactor pin with background and duct regions, with the option to be
 * 2-D or 3-D.
 */
class PinMeshGenerator : public ReactorGeometryMeshBuilderBase
{
public:
  static InputParameters validParams();

  PinMeshGenerator(const InputParameters & parameters);

  std::unique_ptr<MeshBase> generate() override;

protected:
  // Delete outermost mesh interval of single-pin / homogenized assembly and replace with
  // triangulated mesh with fixed number of nodes at outer boundary
  void generateFlexibleAssemblyBoundaries();

  // Define metadata associated with PinMeshGenerator
  void generateMetadata();

  ///The id number for this pin type
  const subdomain_id_type _pin_type;

  ///The face-to-face size of this pin
  const Real _pitch;

  ///The number of azimuthal divisions
  const unsigned int _num_sectors;

  ///The outer radii of concentric rings in the pin
  std::vector<Real> _ring_radii;

  ///The inner apothem of any surrounding ducts in the pin
  const std::vector<Real> _duct_halfpitch;

  ///The number of mesh intervals in a radial division starting from the center
  std::vector<unsigned int> _intervals;

  ///2-D vector (axial outer indexing, radial inner indexing) used to set "region_id" extra-element integer of the pin mesh elements
  std::vector<std::vector<subdomain_id_type>> _region_ids;

  ///Whether block names have been provided by user
  bool _has_block_names;

  ///2-D vector (axial outer indexing, radial inner indexing) used to set block names of pin mesh elements
  std::vector<std::vector<std::string>> _block_names;

  ///The type of geometry that is being described (Square or Hex, declared in the ReactorMeshParams object)
  std::string _mesh_geometry;

  ///The number of dimensions the mesh is ultimately going to have (2 or 3, declared in the ReactorMeshParams object)
  int _mesh_dimensions;

  ///Whether this mesh should be extruded to 3-D, making it the final structure in the reactor mesh
  const bool _extrude;

  ///Whether the centermost elements in the pin should be quad elements as opposed to tri elements
  bool _quad_center;

  ///Whether the resulting pin mesh should be homogenized
  bool _homogenized;

  ///Whether the resulting pin mesh should also be used as an assembly mesh
  bool _is_assembly;

  /// The final mesh that is generated by the subgenerators;
  /// This mesh is generated by the subgenerators with only element and boundary ids changed.
  std::unique_ptr<MeshBase> * _build_mesh;
};
