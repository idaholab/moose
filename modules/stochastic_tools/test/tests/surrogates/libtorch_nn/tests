[Tests]
  issues = "#19571"
  design = "LibtorchANNTrainer.md LibtorchANNSurrogate.md"

  [train_and_evaluate]
    requirement = 'The system shall be able to train and evaluate a libtorch-based neural network in the same input file.'
    type = CSVDiff
    input = train_and_evaluate.i
    allow_test_objects = true
    cli_args = "Trainers/train/read_from_file=false"
    csvdiff = 'train_and_evaluate_out_results_0002.csv'
    capabilities = 'libtorch'
  []
  [train]
    requirement = 'The system shall be able to train a libtorch-based neural network.'
    type = CheckFiles
    input = train.i
    check_files = 'train_out_train.rd/data mynet.pt'
    cli_args = "Trainers/train/read_from_file=false"
    allow_test_objects = true
    capabilities = 'libtorch'
  []
  [evaluate]
    requirement = 'The system shall be able to evaluate a previously trained, libtorch-based neural network.'
    type = CSVDiff
    input = evaluate.i
    allow_test_objects = true
    csvdiff = 'evaluate_out_results_0002.csv'
    prereq = train
    capabilities = 'libtorch'
  []
  [retrain]
    requirement = 'The system shall be able to retrain a pretrained and saved libtorch-based neural network.'
    type = CSVDiff
    input = retrain.i
    allow_test_objects = true
    cli_args = "Trainers/train/read_from_file=true"
    csvdiff = 'retrain_out_results_0002.csv'
    prereq = evaluate
    capabilities = 'libtorch'
  []
  [train-with-rel-tol]
    requirement = 'The system shall be able to train a libtorch-based neural network using a relative tolerance instead of fixed epoch number.'
    type = CheckFiles
    input = train.i
    check_files = 'train_out_train.rd/data mynet.pt'
    cli_args = "Trainers/train/read_from_file=false Trainers/train/rel_loss_tol=0.1"
    allow_test_objects = true
    capabilities = 'libtorch'
    prereq = retrain
  []
  [train-standardized]
    requirement = 'The system shall be able to train a libtorch-based neural network with standardized input and output parameters.'
    type = CheckFiles
    input = train.i
    check_files = 'standardized_train.rd/data mynet.pt'
    cli_args = "Trainers/train/read_from_file=false Trainers/train/standardize_input=true "
               "Trainers/train/standardize_output=true Outputs/file_base=standardized"
    allow_test_objects = true
    capabilities = 'libtorch'
  []
  [evaluate-standardized]
    requirement = 'The system shall be able to evaluate a previously trained, libtorch-based neural network with standardized input and output parameters.'
    type = CSVDiff
    input = evaluate.i
    allow_test_objects = true
    csvdiff = 'evaluate_standardized_results_0002.csv'
    cli_args = "Surrogates/surr/filename='standardized_train.rd' "
               "Outputs/file_base=evaluate_standardized"
    prereq = train-standardized
    capabilities = 'libtorch'
  []
[]
