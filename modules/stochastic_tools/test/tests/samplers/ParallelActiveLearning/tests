[Tests]
  issues = '#28196'
  design = 'GenericActiveLearner.md BayesianActiveLearner.md'
  [active_learning]
    requirement = 'The system shall be be able to perform active learning when '
    [al_1proc]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al1.json'
      min_parallel = 1
      max_parallel = 1
      cli_args = "Executioner/num_steps=2"
      detail = 'using a single processor and the Expected Improvment acquisition; '
    []
    [al_4proc]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al4.json'
      cli_args = "Outputs/file_base='al4' Executioner/num_steps=2"
      min_parallel = 4
      max_parallel = 4
      detail = 'using four processors and the Expected Improvment acquisition; '
    []
    [al_PoI]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al_poi.json'
      cli_args = "ParallelAcquisition/expectedimprovement/type='ProbabilityofImprovement' Outputs/file_base='al_poi' Executioner/num_steps=2"
      min_parallel = 1
      max_parallel = 1
      detail = 'using the Probability of Improvment acquisition; '
    []
    [al_CoV]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al_cov.json'
      cli_args = "ParallelAcquisition/expectedimprovement/type='CoefficientOfVariation' Outputs/file_base='al_cov'"
      min_parallel = 1
      max_parallel = 1
      detail = 'using the Coefficient of Variation acquisition; '
    []
    [al_EIGF]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al_eigf.json'
      cli_args = "ParallelAcquisition/expectedimprovement/type='ExpectedImprovementGlobalFit' Outputs/file_base='al_eigf'"
      min_parallel = 1
      max_parallel = 1
      detail = 'using the Expected Improvement for Global Fit acquisition; '
    []
    [al_UFunc]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al_ufunc.json'
      cli_args = "ParallelAcquisition/expectedimprovement/type='UFunction' Outputs/file_base='al_ufunc'"
      min_parallel = 1
      max_parallel = 1
      detail = 'using the U-Function acquisition; '
    []
    [al_UCB]
      type = 'JSONDiff'
      input = parallelAL.i
      allow_test_objects = true
      jsondiff = 'al_ucb.json'
      cli_args = "ParallelAcquisition/expectedimprovement/type='UpperConfidenceBound' Outputs/file_base='al_ucb'"
      min_parallel = 1
      max_parallel = 1
      detail = 'using the Upper Confidence Bound acquisition.'
    []
  []
  [Bayesian_active_learning]
    requirement = 'The system shall be be able to perform active learning for Bayesian problems when '
    [b_al]
      type = 'JSONDiff'
      input = BayesianALTrain.i
      allow_test_objects = true
      jsondiff = 'b_al.json'
      min_parallel = 1
      max_parallel = 1
      detail = 'using the Bayesian posterior targeted acquisition; '
    []
    [b_al_test]
      type = 'JSONDiff'
      input = BayesianALTest.i
      allow_test_objects = true
      jsondiff = 'b_al_test.json'
      min_parallel = 1
      max_parallel = 1
      detail = 'using a trained GP model for the MCMC sampling.'
    []
  []
[]