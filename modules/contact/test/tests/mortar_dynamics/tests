[Tests]
  design = 'constraints/ComputeDynamicFrictionalForceLMMechanicalContact.md '
           'constraints/ComputeDynamicFrictionalForceLMMechanicalContact.md'
  issues = '#19671'
  [block-dynamics]
    type = 'Exodiff'
    exodiff = 'block-dynamics_out.e'
    input = 'block-dynamics.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=50'
    cli_args = 'Executioner/dt=0.05 Executioner/end_time=0.3'
    requirement = 'The system shall solve mortar frictionless contact between two blocks with '
                  'weighted gap time stabilization using mortar nodal geometry.'
    # ComputeDynamicWeightedGapLMMechanicalContact does not support recover
    recover = false
  []
  [block-dynamics-reference]
    type = 'CSVDiff'
    input = 'block-dynamics-reference.i'
    csvdiff = 'block-dynamics-reference_out.csv'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=50'
    requirement = 'The system shall solve dynamics mortar contact between two blocks with weighted '
                  'gap time stabilization and match reference kinetic and elastic energy results.'
    # ComputeDynamicWeightedGapLMMechanicalContact does not support recover
    recover = false
  []
  [block-dynamics-action]
    type = 'Exodiff'
    exodiff = 'block-dynamics-action_out.e'
    input = 'block-dynamics-action.i'
    custom_cmp = block-dynamics-action.cmp
    capabilities = 'ad_size>=50'
    cli_args = 'Contact/mechanical/mortar_dynamics=true Contact/mechanical/newmark_beta=0.25  '
               'Contact/mechanical/newmark_gamma=0.5 Executioner/dt=0.05 Executioner/end_time=0.3'
    requirement = 'The system shall solve mortar frictionless contact between two blocks with '
                  'weighted gap time stabilization using mortar nodal geometry via the contact '
                  'mechanics action.'
    # ComputeDynamicWeightedGapLMMechanicalContact does not support recover
    recover = false
  []
  [block-dynamics-action-beta-error]
    type = RunException
    input = 'block-dynamics-action.i'
    expect_err = 'newmark_beta can only be used with the mortar_dynamics option'
    cli_args = 'Contact/mechanical/mortar_dynamics=false Contact/mechanical/newmark_beta=0.25 '
               'Executioner/end_time=0.3'
    capabilities = 'ad_size>=50'
    requirement = 'The system shall generate an error if dynamics is not specifically requested and '
                  'Newmark-beta integration parameter beta is provided.'
  []
  [block-dynamics-action-gamma-error]
    type = RunException
    input = 'block-dynamics-action.i'
    expect_err = 'newmark_gamma can only be used with the mortar_dynamics option'
    cli_args = 'Contact/mechanical/mortar_dynamics=false Contact/mechanical/newmark_gamma=0.5 '
               'Executioner/end_time=0.3'
    capabilities = 'ad_size>=50'
    requirement = 'The system shall generate an error if dynamics is not specifically requested and '
                  'Newmark-beta integration parameter gamma is provided.'

  []
  [block-dynamics-friction]
    type = 'Exodiff'
    exodiff = 'block-dynamics-friction_out.e'
    input = 'block-dynamics-friction.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=50'
    cli_args = 'Executioner/dt=0.05 Executioner/end_time=0.3'
    requirement = 'The system shall solve mortar frictional contact between two blocks with weighted '
                  'gap time stabilization using mortar nodal geometry.'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
  [block-dynamics-friction-action]
    type = 'Exodiff'
    exodiff = 'block-dynamics-friction-action_out.e'
    input = 'block-dynamics-friction-action.i'
    custom_cmp = block-dynamics-friction-action.cmp
    capabilities = 'ad_size>=50'
    cli_args = 'Executioner/dt=0.05 Executioner/end_time=0.3'
    requirement = 'The system shall solve mortar frictional contact between two blocks with weighted '
                  'gap time stabilization using mortar nodal geometry via the contact action.'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
  [block-dynamics-friction-creep]
    type = 'Exodiff'
    exodiff = 'block-dynamics-friction-creep_out.e'
    input = 'block-dynamics-friction-creep.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    min_parallel = 1
    capabilities = 'ad_size>=50'
    requirement = 'The system shall simulate mortar frictional contact between two blocks with '
                  'weighted gap time stabilization using mortar nodal geometry with a creep material '
                  'model.'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
  [frictional-mortar-3d-dynamics]
    type = 'CSVDiff'
    input = 'frictional-mortar-3d-dynamics.i'
    csvdiff = 'frictional-mortar-3d-dynamics_out_frictional-pressure_0001.csv '
              'frictional-mortar-3d-dynamics_out_frictional-pressure-3d_0001.csv '
              'frictional-mortar-3d-dynamics_out_tangent_x_0001.csv '
              'frictional-mortar-3d-dynamics_out_tangent_y_0001.csv'
    requirement = 'The system shall solve a dynamic 3D frictional bouncing block problem with mortar '
                  'constraint using nodal-attached geometry'
    restep = false # Issue #31054
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=150 & method=opt'
  []
  [frictional-mortar-3d-dynamics-light]
    type = 'Exodiff'
    exodiff = 'frictional-mortar-3d-dynamics-light_out.e'
    input = 'frictional-mortar-3d-dynamics-light.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=64'
    requirement = 'The system shall solve a dynamic 3D frictional one-element bouncing block problem '
                  'with mortar constraint using nodal-attached geometry and the correct edge '
                  'dropping setting'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
  [frictional-mortar-3d-dynamics-light-miss-dropping]
    type = 'Exodiff'
    exodiff = 'frictional-mortar-3d-dynamics-light_out.e'
    input = 'frictional-mortar-3d-dynamics-light.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=64'
    cli_args = 'Constraints/friction/correct_edge_dropping=false '
               'Constraints/normal_x/correct_edge_dropping=false '
               'Constraints/normal_y/correct_edge_dropping=false '
               'Constraints/normal_z/correct_edge_dropping=false '
               'Constraints/tangential_x/correct_edge_dropping=false '
               'Constraints/tangential_y/correct_edge_dropping=false '
               'Constraints/tangential_z/correct_edge_dropping=false '
               'Constraints/tangential_dir_x/correct_edge_dropping=false '
               'Constraints/tangential_dir_y/correct_edge_dropping=false '
               'Constraints/tangential_dir_z/correct_edge_dropping=false'
    requirement = 'The system shall solve a dynamic 3D frictional one-element bouncing block problem '
                  'with mortar constraint using nodal-attached geometry and the incorrect edge '
                  'dropping setting'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
  [frictional-mortar-3d-dynamics-light-function]
    type = 'Exodiff'
    exodiff = 'frictional-mortar-3d-dynamics-light-function_out.e'
    input = 'frictional-mortar-3d-dynamics-light-function.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-5
    capabilities = 'ad_size>=64'
    restep = false # Issue #31054
    requirement = 'The system shall solve a dynamic 3D frictional one-element bouncing block problem '
                  'with mortar constraints using nodal geometry and a friction coefficient '
                  'that depends on the normal contact pressure and the relative tangential velocity'
    # ComputeDynamicFrictionalForceLMMechanicalContact does not support recover
    recover = false
  []
[]
