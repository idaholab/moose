[Tests]
  design = 'constraints/ComputeFrictionalForceLMMechanicalContact.md'
  issues = '#17495'
  parallel_scheduling = true
  [cylinder_friction]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_check_x_disp_FINAL.csv cylinder_friction_check_cont_press_FINAL.csv '
              'cylinder_friction_check_y_disp_FINAL.csv cylinder_friction_check_friction_FINAL.csv'
    input = 'cylinder_friction.i'
    rel_err = 5.0e-4
    min_parallel = 4
    heavy = true
    requirement = 'The contact module shall be able to solve frictional contact between a cylinder '
                  'and a plane.'
  []
  [cylinder_friction_penalty]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_check_x_disp_FINAL.csv '
              'cylinder_friction_penalty_check_cont_press_FINAL.csv '
              'cylinder_friction_penalty_check_y_disp_FINAL.csv '
              'cylinder_friction_penalty_check_friction_FINAL.csv'
    input = 'cylinder_friction_penalty.i'
    rel_err = 7.5e-4
    abs_zero = 1.0e-4
    heavy = true
    requirement = "The contact module shall be able to approximate frictional contact solution "
                  "between a cylinder and a plane using penalty mortar contact."
  []
  [cylinder_friction_penalty_adaptivity]
    type = 'CSVDiff'
    csvdiff = cylinder_friction_penalty_adaptivity_surface_FINAL.csv
    input = 'cylinder_friction_penalty_adaptivity.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-2
    valgrind = none
    heavy = true
    requirement = "The contact module shall be able to approximate frictional contact solution "
                  "between a cylinder and a plane using penalty mortar contact after performing "
                  "initial adaptivity around the contact area."
  []
  [cylinder_friction_penalty_al_normal]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_normal_al_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_normal_al.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-2
    heavy = true
    capabilities = 'method=opt'
    valgrind = none
    requirement = "The contact module shall be able to approximate normal contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement."
  []
  [action_error]
    type = 'RunException'
    input = 'cylinder_friction_penalty_frictional_al_action.i'
    expect_err = "Augmented Lagrange parameter was specified, but the selected problem type does not "
                 "support Augmented Lagrange iterations."
    cli_args = 'Problem/type=FEProblem'
    requirement = "The contact action shall be alert the user if Augmented Lagrage parameters are "
                  "supplied, but the selected Problem class does not support AL."
  []
  [cylinder_friction_penalty_al_frictional]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-2
    heavy = true
    valgrind = none
    capabilities = 'method=opt'
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement."
  []
  [cylinder_friction_penalty_frictional_al_tight_slip]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_tight_slip_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al_tight_slip.i'
    rel_err = 1.0e-3
    abs_zero = 1.0e-4
    heavy = true
    valgrind = none
    capabilities = 'method=opt'
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement with a tight slip distance tolerance."
  []
  [cylinder_friction_penalty_al_frictional_action]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_action_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al_action.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-2
    heavy = true
    valgrind = none
    capabilities = 'method=opt'
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement using the contact action."
  []
  [cylinder_friction_penalty_al_frictional_action_amg]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_action_amg_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al_action_amg.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-2
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement using the contact action and use the hypre algebraic multigrid "
                  "preconditioner since the augmented Lagrange (Uzawa) constraint enfrocement "
                  "approach allows for maintaining reasonable system condition numbers."
    heavy = true
  []
  [cylinder_friction_penalty_frictional_al_action_amg_tight]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_action_amg_tight_vectorpp_output_sur'
              'face_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al_action_amg_tight.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-2
    capabilities = 'method=opt'
    valgrind = none
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement using the contact action and use the hypre algebraic multigrid "
                  "preconditioner since the augmented Lagrange (Uzawa) constraint enfrocement "
                  "approach allows for maintaining reasonable system condition numbers and selecting "
                  "the 'Bussetta' and 'Simple' adaptivity strategies for the normal and frictional "
                  "penalty values, respectively."
    recover = false # Only doing one timestep
  []
  [cylinder_friction_penalty_al_frictional_action_amg_bussetta_simple]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_frictional_al_action_amg_bussetta_simple_vectorpp_output_sur'
              'face_FINAL.csv'
    input = 'cylinder_friction_penalty_frictional_al_action_amg_bussetta_simple.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-2
    restep = false # Issue #31054
    requirement = "The contact module shall be able to approximate frictional contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement using the contact action and use the hypre algebraic multigrid "
                  "preconditioner since the augmented Lagrange (Uzawa) constraint enfrocement "
                  "approach allows for maintaining reasonable system condition numbers and selecting "
                  "the 'Bussetta' and 'FrictionLimit' adaptivity strategies for the normal and frictional "
                  "penalty values, respectively."
    capabilities = 'method!=dbg'
    recover = false # Only doing one timestep
  []
  [cylinder_friction_penalty_al_separation]
    type = 'CSVDiff'
    csvdiff = 'cylinder_friction_penalty_normal_al_backup_vectorpp_output_surface_FINAL.csv'
    input = 'cylinder_friction_penalty_normal_al_backup.i'
    rel_err = 5.0e-4
    abs_zero = 1.0e-2
    heavy = true
    valgrind = none
    capabilities = 'method=opt'
    requirement = "The contact module shall be able to approximate normal contact in a "
                  "two-dimensional cylinder via an augmented Lagrange approach to constraint "
                  "enforcement and allow for separation."
  []
  [ironing]
    type = 'CSVDiff'
    csvdiff = 'ironing_chkfile_cont_press_0009.csv ironing_chkfile_friction_0009.csv'
    input = 'ironing.i'
    rel_err = 1.0e-4
    min_parallel = 4
    heavy = true
    capabilities = 'ad_size>=200'
    requirement = 'The contact module shall be able to solve frictional contact between a '
                  'semicircular tool and flexible base material.'
  []
  [ironing_penalty]
    type = 'CSVDiff'
    csvdiff = 'ironing_penalty_out_penalty_normal_pressure_0012.csv'
    input = 'ironing_penalty.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-4
    capabilities = 'ad_size>=200'
    cli_args = 'Executioner/end_time=0.15'
    requirement = "The contact module shall be able to solve frictional contact between a "
                  "semicircular tool and flexible base material using a penalty approach to mortar "
                  "contact."
  []
  [ironing_penalty_action]
    type = 'CSVDiff'
    csvdiff = 'ironing_penalty_action_out_penalty_normal_pressure_0012.csv'
    input = 'ironing_penalty_action.i'
    rel_err = 1.0e-4
    abs_zero = 1.0e-4
    capabilities = 'ad_size>=200'
    cli_args = 'Executioner/end_time=0.15'
    requirement = "The contact module shall be able to solve frictional contact between a "
                  "semicircular tool and flexible base material using a penalty approach to mortar "
                  "contact through the contact action."
  []
  [frictional_bouncing_block]
    type = 'CSVDiff'
    csvdiff = 'frictional_bouncing_block_checkfile_cont_press_0029.csv '
              'frictional_bouncing_block_checkfile_friction_0029.csv'
    input = 'frictional_bouncing_block.i'
    rel_err = 1.0e-4
    heavy = true
    requirement = 'The contact module shall be able to solve frictional contact between a bouncing '
                  'block and flexible base material.'
  []
  [frictional_bouncing_block_action]
    type = 'CSVDiff'
    csvdiff = 'frictional_bouncing_block_action_checkfile_cont_press_0029.csv '
              'frictional_bouncing_block_action_checkfile_friction_0029.csv'
    input = 'frictional_bouncing_block_action.i'
    rel_err = 1.0e-4
    heavy = true
    requirement = "The contact module shall be able to solve frictional contact between a bouncing "
                  "block and flexible base material verifying setup in the contact action."
  []
  [frictional_bouncing_block_edge_dropping]
    type = 'CSVDiff'
    csvdiff = 'frictional_bouncing_block_edge_dropping_cont_press_0023.csv '
              'frictional_bouncing_block_edge_dropping_friction_0023.csv'
    input = 'frictional_bouncing_block.i'
    rel_err = 1.0e-4
    capabilities = 'method!=dbg'
    valgrind = 'none'
    cli_args = "Constraints/weighted_gap_lm/correct_edge_dropping=true "
               "UserObjects/weighted_vel_uo/correct_edge_dropping=true Executioner/end_time=5.5 "
               "Outputs/file_base=frictional_bouncing_block_edge_dropping"
    requirement = "The contact module shall be able to solve frictional contact between a bouncing "
                  "block and a flexible substrate when correct edge dropping is enabled. An "
                  "additional requirement is that the correct edge dropping treatment must yield "
                  "same results as an incorrect edge dropping treatment when there is not edge "
                  "dropping, e.g. when the entire secondary surface projects to the primary surface."
  []
[]
