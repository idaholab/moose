# An explanation and results for the full runs of these inputs files are given in the contact documentation

[Examples]
  design = 'Constraints/index.md'
  issues = '#13080 #23802'
  [frictionless-mortar-3d]
    type = 'Exodiff'
    input = 'frictionless-mortar-3d.i'
    exodiff = 'frictionless-mortar-3d_out.e'
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint'
    custom_cmp = 'frictionless-mortar-3d.cmp'
    capabilities = 'ad_size>=150 & method!=dbg'
    valgrind = 'none'
  []
  [frictionless-mortar-3d_pg]
    type = 'CSVDiff'
    input = 'frictionless-mortar-3d_pg.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    csvdiff = 'frictionless-mortar-3d_pg_out.csv'
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint using Petrov-Galerkin approach.'
    valgrind = 'none'
  []
  [frictionless-mortar-3d-test-derivative-trimming]
    type = 'RunApp'
    input = 'frictionless-mortar-3d-test-derivative-trimming.i'
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraints where the primary suface is composed of a single element and the '
                  'secondary side is composed of first order faces with a required derivative '
                  'container size of less than 50.'
  []
  [frictionless-mortar-3d-action]
    type = 'CSVDiff'
    input = 'frictionless-mortar-3d-action.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    csvdiff = 'frictionless-mortar-3d-action_out_contact-pressure_0002.csv'
    mesh_mode = 'REPLICATED' # see issue 24255
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint using the contact action.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictionless-mortar-3d-pg-action]
    prereq = 'frictionless-mortar-3d_pg'
    type = 'CSVDiff'
    input = 'frictionless-mortar-3d-action.i'
    cli_args = 'Contact/mortar/use_petrov_galerkin=true '
               'Outputs/file_base="frictionless-mortar-3d_pg_out" '
               'Postprocessors/active="contact lambda"'
    capabilities = 'ad_size>=100'
    csvdiff = 'frictionless-mortar-3d_pg_out.csv'
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint using Petrov-Galerkin approach in contact action.'
  []
  [frictionless-mortar-3d-action-correct-edge-dropping]
    type = 'CSVDiff'
    input = 'frictionless-mortar-3d-action.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    csvdiff = 'frictionless-mortar-3d-action-correct-edge-dropping_out_contact-pressure_0002.csv'
    mesh_mode = 'REPLICATED' # see issue 24255
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint using the contact action and selecting the temporary flag correct edge '
                  'dropping.'
    cli_args = 'Contact/mortar/correct_edge_dropping=true '
               'Outputs/file_base=frictionless-mortar-3d-action-correct-edge-dropping_out'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictionless-mortar-3d-debug-mesh]
    type = 'Exodiff'
    input = 'frictionless-mortar-3d.i'
    capabilities = 'ad_size>=150'
    exodiff = 'mortar_segment_mesh.e'
    cli_args = 'Executioner/end_time=0.5 Executioner/dtmin=0.5 Constraints/normal_lm/debug_mesh=true '
               'Constraints/normal_x/debug_mesh=true Constraints/normal_y/debug_mesh=true '
               'Constraints/normal_z/debug_mesh=true UserObjects/weighted_gap_uo/debug_mesh=true'
    requirement = 'The system shall solve a 3D frictionless bouncing block problem with mortar '
                  'constraint and output the mortar segment mesh for debugging purposes.'
    max_parallel = 1
    prereq = 'frictionless-mortar-3d'
  []
  [frictional-mortar-3d]
    type = 'Exodiff'
    input = 'frictional-mortar-3d.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    exodiff = 'frictional-mortar-3d_out.e'
    requirement = 'The system shall solve a 3D frictional bouncing block problem with mortar '
                  'constraint using nodal-attached geometry.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictional-mortar-3d-pg]
    type = 'CSVDiff'
    input = 'frictional-mortar-3d_pg.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    csvdiff = 'frictional-mortar-3d_pg_out_contact-pressure_0001.csv '
              'frictional-mortar-3d_pg_out_frictional-pressure-3d_0001.csv '
              'frictional-mortar-3d_pg_out_frictional-pressure_0001.csv'
    requirement = 'The system shall solve a 3D frictional bouncing block problem with mortar '
                  'constraint using the Petrov-Galerkin approach.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictional-mortar-3d-function]
    type = 'Exodiff'
    input = 'frictional-mortar-3d-function.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    exodiff = 'frictional-mortar-3d-function_out.e'
    requirement = 'The system shall solve a 3D frictional block problem with mortar constraint using '
                  'a simple frictional model dependent on relative velocity and contact pressure.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictional-mortar-3d-action]
    type = 'CSVDiff'
    input = 'frictional-mortar-3d-action.i'
    capabilities = 'ad_size>=150 & method!=dbg'
    csvdiff = 'frictional-mortar-3d-action_out_frictional-pressure_0001.csv '
              'frictional-mortar-3d-action_out_frictional-pressure-3d_0001.csv '
              'frictional-mortar-3d-action_out_tangent_x_0001.csv '
              'frictional-mortar-3d-action_out_tangent_y_0001.csv'
    requirement = 'The system shall solve a 3D frictional bouncing block problem with mortar '
                  'constraints using nodal-attached geometry and a frictional pressure vector '
                  'generated by an auxiliary kernel through a user-friendly action. Results are '
                  'diffed against non-action output.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = 'none'
  []
  [frictional-mortar-3d-pg-action]
    prereq = 'frictional-mortar-3d-pg'
    type = 'CSVDiff'
    input = 'frictional-mortar-3d-action.i'
    cli_args = 'Contact/mortar/use_petrov_galerkin=true '
               'Outputs/file_base=frictional-mortar-3d_pg_out'
    capabilities = 'ad_size>=150'
    csvdiff = 'frictional-mortar-3d_pg_out_contact-pressure_0001.csv '
              'frictional-mortar-3d_pg_out_frictional-pressure-3d_0001.csv '
              'frictional-mortar-3d_pg_out_frictional-pressure_0001.csv'
    requirement = 'The system shall solve a 3D frictional bouncing block problem with mortar '
                  'constraint using the Petrov-Galerkin approach in contact action.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
  []
  [half_sphere_nodal_geometry]
    type = 'Exodiff'
    exodiff = 'nodal_geometry_only.e'
    input = 'half_sphere_nodal_geometry.i'
    capabilities = 'ad_size>=100'
    valgrind = 'heavy'
    requirement = 'The system shall generate consistent mortar nodal geometry (normal and tangent '
                  'vectors) on a spherical surface.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    allow_warnings = true
    max_parallel = 1
    # not running any time step, just examining nodal geometry
    recover = false
  []
  [frictional-mortar-3d-penalty]
    type = 'Exodiff'
    input = 'frictional-mortar-3d-penalty.i'
    capabilities = 'ad_size>=200'
    exodiff = 'frictional-mortar-3d-penalty_out.e'
    requirement = 'The system shall solve a 3D frictional problem with mortar constraint using a '
                  'penalty approach'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
  []
  [frictionless-mortar-3d-penalty]
    type = 'Exodiff'
    input = 'frictionless-mortar-3d-penalty.i'
    capabilities = 'ad_size>=200'
    exodiff = 'frictionless-mortar-3d-penalty_out.e'
    requirement = 'The system shall solve a 3D frictionless problem with mortar constraint using a '
                  'penalty approach'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
  []
  [frictional-mortar-3d-al]
    type = 'Exodiff'
    input = 'frictional-mortar-3d-al.i'
    exodiff = 'frictional-mortar-3d-al_out.e'
    requirement = 'The system shall be able to solve a 3D frictional problem with mortar constraint using a '
                  'augmented Lagrange approach and converging to prescribed tolerance.'
    rel_err = 1.0e-5
    abs_zero = 1.0e-5
    valgrind = none
    capabilities = 'ad_size>=200 & method=opt'
    heavy = true
    max_time = 1000
  []
[]
