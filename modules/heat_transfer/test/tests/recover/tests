[Tests]
  design = "modules/heat_transfer/index.md"
  issues = "#10079"
  [recover_1]
    type = Exodiff
    input = recover.i
    exodiff = recover_out.e
    capabilities = 'superlu'
    requirement = 'The system shall run a simulation with heat conduction, a heat source, thermal contact, and boundary conditions.'
  []
  [recover_2]
    type = RunApp
    input = recover.i
    prereq = recover_1
    cli_args = 'Outputs/checkpoint=true Executioner/num_steps=5'
    capabilities = 'superlu'
    requirement = 'The system shall run a short simulation with heat conduction, a heat source, thermal contact, and boundary conditions.'
  []
  [recover_3]
    type = Exodiff
    input = recover.i
    exodiff = recover_out.e
    prereq = recover_2
    delete_output_before_running = false
    cli_args = '--recover recover_out_cp/0005'
    capabilities = 'superlu'
    restep = false # Restep happens at the recover_2 step
    requirement = 'The system shall be able to recover from a short simulation and reproduce a the full time scale simulation with heat conduction, a heat source, thermal contact, and boundary conditions.'
  []

  [ad_recover_1]
    type = Exodiff
    input = ad_recover.i
    exodiff = ad_recover_out.e
    capabilities = 'superlu'
    requirement = 'The system shall run a simulation with heat conduction, a heat source, thermal contact, and boundary conditions with automatic differentiation.'
  []
  [ad_recover_2]
    type = RunApp
    input = ad_recover.i
    prereq = ad_recover_1
    cli_args = 'Outputs/checkpoint=true Executioner/num_steps=5'
    capabilities = 'superlu'
    requirement = 'The system shall run a short simulation with heat conduction, a heat source, thermal contact, and boundary conditions with automatic differentiation.'
  []
  [ad_recover_3]
    type = Exodiff
    input = ad_recover.i
    exodiff = ad_recover_out.e
    prereq = ad_recover_2
    delete_output_before_running = false
    cli_args = '--recover ad_recover_out_cp/0005'
    capabilities = 'superlu'
    restep = false # Restep happens at the ad_recover_2 step
    requirement = 'The system shall be able to recover from a short simulation and reproduce a the full time scale simulation with heat conduction, a heat source, thermal contact, and boundary conditions with automatic differentiation.'
  []

  [ad_recover_jacobian]
    type = 'PetscJacobianTester'
    input = 'ad_recover.i'
    ratio_tol = 1e-7
    difference_tol = 1e-5
    run_sim = True
    capabilities = 'method=opt'
    cli_args = 'Executioner/num_steps=2'
    skip = 'AD Thermal Contact not yet implemented'
    requirement = 'The system shall produce a correct Jacobian for heat conduction with thermal contact based on automatic differentiation.'
    issues = "#5658 #12633"
  []
[]
