[Tests]
  [dirichlet]
    issues = '#18086 #29709'
    design = 'WCNSFVInletVelocityBC.md WCNSFVInletTemperatureBC.md WCNSFVMomentumFluxDirichletBC.md'
    requirement = 'The system shall be able to use Dirichlet boundary conditions for specifying inlet conditions in a weakly compressible fluid flow simulation'
    [using_velocity]
      type = 'Exodiff'
      input = dirichlet_bcs_velocity.i
      exodiff = dirichlet_bcs_velocity_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using a velocity postprocessor'
    []
    [using_mdot]
      type = 'Exodiff'
      input = dirichlet_bcs_mdot.i
      exodiff = dirichlet_bcs_mdot_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using a mass flow rate postprocessor'
    []
  []
  [flux]
    issues = '#19543 #19472 #24936'
    design = 'WCNSFVMassFluxBC.md WCNSFVMomentumFluxBC.md WCNSFVEnergyFluxBC.md WCNSFVScalarFluxBC.md NSFVAction.md'
    requirement = 'The system shall be able to use flux boundary conditions for specifying inlet conditions in a weakly compressible fluid flow simulation'
    [direct]
      type = 'Exodiff'
      input = flux_bcs_direct.i
      exodiff = flux_bcs_direct_out.e
      method = "!dbg"
      abs_zero = 3e-9
      recover = false # see #19126
      detail = 'specifying the flux values directly though the flow rates'
    []
    [from_velocity]
      type = 'Exodiff'
      input = flux_bcs_velocity.i
      exodiff = flux_bcs_velocity_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using the inlet velocity to compute the fluxes'
    []
    [from_velocity_action]
      type = 'Exodiff'
      input = flux_bcs_velocity-action.i
      exodiff = flux_bcs_velocity-action_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using the inlet velocity to compute the fluxes with the NSFV action syntax'
    []
    [from_mdot]
      type = 'Exodiff'
      input = flux_bcs_mdot.i
      exodiff = flux_bcs_mdot_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using the inlet mass flow rate to compute the fluxes'
    []
    [from_mdot_action]
      type = 'Exodiff'
      input = flux_bcs_mdot-action.i
      exodiff = flux_bcs_mdot-action_out.e
      method = "!dbg"
      abs_zero = 1e-9
      recover = false # see #19126
      detail = 'using the inlet mass flow rate to compute the fluxes with NSFVAction syntax'
    []
    [reversal]
      type = 'Exodiff'
      input = flux_bcs_reversal.i
      exodiff = flux_bcs_reversal_out.e
      method = "!dbg"
      abs_zero = 1e-6
      recover = false
      detail = 'and correctly handle inflow and outflow boundaries'
    []
  []
  [exceptions_dirichlet_bcs]
    issues = '#18086'
    design = 'WCNSFVInletVelocityBC.md WCNSFVInletTemperatureBC.md'
    requirement = 'The system shall report an error if'
    [missing_info_dirichlet_velocity]
      type = RunException
      input = 'dirichlet_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_u FVBCs/inlet_u_bis/type=WCNSFVInletVelocityBC FVBCs/inlet_u_bis/variable=u FVBCs/inlet_u_bis/boundary=left FVBCs/inlet_u_bis/mdot_pp=0 FVBCs/inlet_u_bis/vel_x=u FVBCs/inlet_u_bis/vel_y=v'
      expect_err = 'Mass flow rate, area and density should be provided if velocity is not'
      detail = 'the inlet velocity cannot be determined from the mass flow rate due to insufficient parameters'
    []
    [missing_info_dirichlet_temperature]
      type = RunException
      input = 'dirichlet_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVInletTemperatureBC FVBCs/inlet_T_bis/variable=T FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/vel_x=u FVBCs/inlet_T_bis/vel_y=v'
      expect_err = 'If not providing the temperature, the energy flow rate should be provided'
      detail = 'the inlet temperature cannot be determined because neither the temperature or the energy flow rate have been provided'
    []
    [missing_info_dirichlet_temperature_from_energy_flow]
      type = RunException
      input = 'dirichlet_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVInletTemperatureBC FVBCs/inlet_T_bis/variable=T FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/energy_pp=0'
      expect_err = 'If not providing the inlet temperature, the inlet velocity or mass flow should'
      detail = 'the inlet temperature cannot be determined from the energy flow rate due to missing fluid velocity information'
    []
    [missing_info_dirichlet_temperature_from_velocity]
      type = RunException
      input = 'dirichlet_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVInletTemperatureBC FVBCs/inlet_T_bis/variable=T FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/energy_pp=0 FVBCs/inlet_T_bis/velocity_pp=0'
      expect_err = 'If providing the inlet velocity, the density, the area and the specific heat'
      detail = 'the inlet temperature cannot be determined from the velocity due to insufficient parameters'
    []
    [missing_info_dirichlet_temperature_from_mdot]
      type = RunException
      input = 'dirichlet_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVInletTemperatureBC FVBCs/inlet_T_bis/variable=T FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/energy_pp=0 FVBCs/inlet_T_bis/mdot_pp=0'
      expect_err = 'If providing the inlet mass flow rate, the inlet specific heat capacity should'
      detail = 'the inlet temperature cannot be determined from the mass flow rate due to insufficient parameters'
    []
  []
  [warnings_dirichlet_bcs]
    issues = '#18086'
    design = 'WCNSFVInletVelocityBC.md WCNSFVInletTemperatureBC.md'
    requirement = 'The system shall return a warning if'
    [both_velocity_and_mdot]
      type = RunException
      input = 'dirichlet_bcs_velocity.i'
      cli_args = 'FVBCs/inlet_u/mdot_pp=0'
      expect_err = 'If setting the velocity directly, no need for inlet mass flow rate or area'
      detail = 'redundant information is provided for setting the inlet velocity'
    []
    [both_temperature_and_mdot]
      type = RunException
      input = 'dirichlet_bcs_velocity.i'
      cli_args = 'FVBCs/inlet_T/mdot_pp=0'
      expect_err = 'If setting the temperature directly, no need for inlet velocity, mass flow or energy'
      detail = 'redundant information is provided for setting the inlet temperature'
    []
  []
  [exceptions_flux_bcs]
    issues = '#19543'
    design = 'WCNSFVMassFluxBC.md WCNSFVMomentumFluxBC.md WCNSFVEnergyFluxBC.md WCNSFVScalarFluxBC.md'
    requirement = 'The system shall report an error if'
    [mass_mdot_needs_area]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inactive=inlet_mass FVBCs/inlet_mass_bis/type=WCNSFVMassFluxBC FVBCs/inlet_mass_bis/variable=pressure FVBCs/inlet_mass_bis/boundary=left FVBCs/inlet_mass_bis/mdot_pp=0 FVBCs/inlet_mass_bis/vel_x=vel_x FVBCs/inlet_mass_bis/vel_y=vel_y FVBCs/inlet_mass_bis/rho=rho'
      expect_err = 'The inlet area should be provided along with the mass flow rate'
      detail = 'only the mass flow rate is provided to compute the inlet mass flux'
    []
    [momentum_mdot_needs_area]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inactive=inlet_u FVBCs/inlet_u_bis/type=WCNSFVMassFluxBC FVBCs/inlet_u_bis/variable=pressure FVBCs/inlet_u_bis/boundary=left FVBCs/inlet_u_bis/mdot_pp=0 FVBCs/inlet_u_bis/vel_x=vel_x FVBCs/inlet_u_bis/vel_y=vel_y FVBCs/inlet_u_bis/rho=rho'
      expect_err = 'The inlet area should be provided along with the mass flow rate'
      detail = 'only the mass flow rate is provided to compute the inlet momentum flux'
    []
    [energy_need_temperature]
      type = RunException
      input = 'flux_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVEnergyFluxBC FVBCs/inlet_T_bis/variable=T_fluid FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/vel_x=vel_x FVBCs/inlet_T_bis/vel_y=vel_y FVBCs/inlet_T_bis/rho=rho FVBCs/inlet_T_bis/T_fluid=temperature FVBCs/inlet_T_bis/cp=cp'
      expect_err = 'If not providing the energy flow rate, the inlet temperature should be provided'
      detail = 'the inlet energy cannot be determined because neither the temperature or the energy flow rate have been provided'
    []
    [energy_temperature_needs_velocity_or_mdot]
      type = RunException
      input = 'flux_bcs_mdot.i'
      cli_args = 'FVBCs/inactive=inlet_T FVBCs/inlet_T_bis/type=WCNSFVEnergyFluxBC FVBCs/inlet_T_bis/variable=T_fluid FVBCs/inlet_T_bis/boundary=left FVBCs/inlet_T_bis/temperature_pp=0 FVBCs/inlet_T_bis/vel_x=vel_x FVBCs/inlet_T_bis/vel_y=vel_y FVBCs/inlet_T_bis/rho=rho FVBCs/inlet_T_bis/T_fluid=temperature FVBCs/inlet_T_bis/cp=cp'
      expect_err = 'If not providing the inlet energy flow rate, the inlet velocity or mass flow'
      detail = 'the inlet energy flux cannot be determined because the temperature was provided but neither the inlet mass flow rate or velocity were provided'
    []
    [scalar_need_flux_or_value]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inactive=inlet_scalar FVBCs/inlet_scalar_bis/type=WCNSFVScalarFluxBC FVBCs/inlet_scalar_bis/variable=scalar FVBCs/inlet_scalar_bis/boundary=left FVBCs/inlet_scalar_bis/vel_x=vel_x FVBCs/inlet_scalar_bis/vel_y=vel_y FVBCs/inlet_scalar_bis/rho=rho FVBCs/inlet_scalar_bis/passive_scalar=scalar'
      expect_err = 'If not providing the scalar flow rate, the inlet scalar concentration should be provided'
      detail = 'neither the scalar quantity flux or boundary values are specified when attempting to compute the scalar quantity flux'
    []
    [scalar_mdot_needs_area]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inactive=inlet_scalar FVBCs/inlet_scalar_bis/type=WCNSFVScalarFluxBC FVBCs/inlet_scalar_bis/variable=scalar FVBCs/inlet_scalar_bis/boundary=left FVBCs/inlet_scalar_bis/scalar_value_pp=0 FVBCs/inlet_scalar_bis/mdot_pp=0 FVBCs/inlet_scalar_bis/vel_x=vel_x FVBCs/inlet_scalar_bis/vel_y=vel_y FVBCs/inlet_scalar_bis/rho=rho FVBCs/inlet_scalar_bis/passive_scalar=scalar'
      expect_err = 'If providing the inlet mass flow rate, the inlet flow area should be provided as well'
      detail = 'only the mass flow rate is provided to compute the inlet scalar quantity flux'
    []
    [scalar_need_some_velocity_info]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inactive=inlet_scalar FVBCs/inlet_scalar_bis/type=WCNSFVScalarFluxBC FVBCs/inlet_scalar_bis/variable=scalar FVBCs/inlet_scalar_bis/boundary=left FVBCs/inlet_scalar_bis/scalar_value_pp=0 FVBCs/inlet_scalar_bis/vel_x=vel_x FVBCs/inlet_scalar_bis/vel_y=vel_y FVBCs/inlet_scalar_bis/rho=rho FVBCs/inlet_scalar_bis/passive_scalar=scalar'
      expect_err = 'If not providing the scalar flow rate, the inlet velocity or mass flow should be provided'
      detail = 'only the scalar quantity boundary value is provided to compute the inlet scalar quantity flux'
    []
  []
  [warnings_flux_bcs]
    issues = '#19543'
    design = 'WCNSFVMassFluxBC.md WCNSFVMomentumFluxBC.md WCNSFVEnergyFluxBC.md WCNSFVScalarFluxBC.md'
    requirement = 'The system shall return a warning if'
    [mass_both_velocity_and_mdot]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inlet_mass/mdot_pp=0'
      expect_err = 'If setting the mass flow rate directly, no need for inlet velocity'
      detail = 'redundant information is provided for setting the inlet mass flux'
    []
    [momentum_both_velocity_and_mdot]
      type = RunException
      input = 'flux_bcs_velocity.i'
      cli_args = 'FVBCs/inlet_u/mdot_pp=0'
      expect_err = 'If setting the mass flow rate directly, no need for inlet velocity'
      detail = 'redundant information is provided for setting the inlet momentum flux'
    []
    [both_energy_and_mdot]
      type = RunException
      input = 'flux_bcs_direct.i'
      cli_args = 'FVBCs/inlet_T/mdot_pp=0'
      expect_err = 'If setting the energy flow rate directly, no need for inlet velocity \(magnitude or direction\), mass flow or temperature'
      detail = 'redundant information is provided for setting the inlet energy flux'
    []
    [both_scalar_and_mdot]
      type = RunException
      input = 'flux_bcs_direct.i'
      cli_args = 'FVBCs/inlet_scalar/mdot_pp=0'
      expect_err = 'If setting the scalar flux directly, no need for inlet velocity, mass flow or scalar '
      detail = 'redundant information is provided for setting the inlet scalar flux'
    []
    [variable_density_channel_test]
      type = CSVDiff
      input = 'variable_deansity_channel_test.i'
      csvdiff = 'variable_deansity_channel_test_out.csv'
      detail = 'using a functor material automatically defined by the physics syntax to combine the thermal diffusivities.'
    []
  []
[]
