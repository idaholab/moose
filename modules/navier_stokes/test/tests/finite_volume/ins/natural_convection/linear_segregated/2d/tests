[Tests]
  design = 'LinearFVEnergyAdvection.md LinearFVMomentumBoussinesq.md'
  issues = '#28951'
  [diff_heated_cavity_linear_segregated]
    type = 'Exodiff'
    input = 'diff_heated_cavity_linear_segregated.i'
    exodiff = 'diff_heated_cavity_linear_segregated_out.e'
    abs_zero = 1e-5
    rel_err = 1e-3
    max_threads = 1
    requirement = 'The system shall be able to use the density Boussinesq approximation to solve for a differentially heated 2D cavity.'
  []
  [diff_heated_cavity_linear_segregated_tri]
    type = 'Exodiff'
    input = 'diff_heated_cavity_linear_segregated.i'
    exodiff = 'diff_heated_cavity_linear_segregated_tri_out.e'
    abs_zero = 1e-5
    rel_err = 1e-3
    max_threads = 1
    cli_args = 'Mesh/gen/elem_type=TRI3
                Outputs/out/file_base=diff_heated_cavity_linear_segregated_tri_out'
    requirement = 'The system shall be able to use the density Boussinesq approximation to solve for a differentially heated 2D cavity in Tri mesh.'
  []
  [diff_heated_cavity_linear_buoyancy]
    type = 'Exodiff'
    input = 'diff_heated_cavity_linear_buoyancy.i'
    exodiff = 'diff_heated_cavity_linear_buoyancy_out.e'
    abs_zero = 1e-5
    rel_err = 1e-3
    max_threads = 1
    requirement = 'The system shall be able to use arbitrary densities to solve buoyant flow in a differentially heated 2D cavity.'
  []


[]
