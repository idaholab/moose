[Tests]
  issues = '#16755'
  design = 'INSFVMomentumBoussinesq.md'
  [1e3]
    type = Exodiff
    input = boussinesq.i
    exodiff = 1e3.e
    cli_args = 'rayleigh=1e3 Outputs/file_base=1e3'
    requirement = 'The system shall be able to reproduce benchmark results for a Rayleigh number of 1e3 using a finite volume discretization.'
    valgrind = 'none'
  []
  [1e4]
    type = Exodiff
    input = boussinesq.i
    exodiff = 1e4.e
    cli_args = 'rayleigh=1e4 Outputs/file_base=1e4'
    requirement = 'The system shall be able to reproduce benchmark results for a Rayleigh number of 1e4 using a finite volume discretization.'
    valgrind = 'none'
  []
  [1e5]
    type = Exodiff
    input = boussinesq.i
    exodiff = 1e5.e
    cli_args = 'rayleigh=1e5 Outputs/file_base=1e5'
    requirement = 'The system shall be able to reproduce benchmark results for a Rayleigh number of 1e5 using a finite volume discretization.'
    valgrind = 'none'
  []
  [1e6]
    type = Exodiff
    input = boussinesq.i
    exodiff = 1e6.e
    cli_args = 'rayleigh=1e6 Outputs/file_base=1e6'
    requirement = 'The system shall be able to reproduce benchmark results for a Rayleigh number of 1e6 using a finite volume discretization.'
    abs_zero = 1e-9
    valgrind = 'none'
  []
  [1e6-action]
    type = Exodiff
    input = boussinesq-action.i
    exodiff = 1e6-action.e
    cli_args = 'rayleigh=1e6 Outputs/file_base=1e6-action'
    requirement = 'The system shall be able to reproduce benchmark results for a Rayleigh number of 1e6 using the INSFV actions.'
    valgrind = 'none'
    issues = '#19742'
  []
  [rho-error]
    type = RunException
    input = boussinesq-action.i
    cli_args = "Modules/NavierStokesFV/density='rho_error'"
    expect_err = 'rho: The density in the boussinesq term is not constant!'
    requirement = 'The system should throw an error if the density is not a constant functor in case of Boussinesq treatment.'
    valgrind = 'none'
    issues = '#19742'
    # New physics cannot support this because we want properties forwarded from fluid properties to work
    skip = '#25642'
  []
  [wcnsfv]
    type = Exodiff
    input = wcnsfv.i
    exodiff = wcnsfv_out.e
    requirement = 'The system shall be able to model natural convection using a weakly compressible implementation.'
    method = '!dbg'
    valgrind = 'none'
  []
  [transient_wcnsfv]
    type = Exodiff
    input = transient-wcnsfv.i
    exodiff = transient-wcnsfv_out.e
    requirement = 'The system shall be able to model transient natural convection with a low Rayleigh number using a weakly compressible implementation.'
    method = '!dbg'
    cli_args = "Outputs/out/execute_on='final'"
    recover = false # See https://github.com/idaholab/moose/issues/17906
    valgrind = 'none'
  []
[]
