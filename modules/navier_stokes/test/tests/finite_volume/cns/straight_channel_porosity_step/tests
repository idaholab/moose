[Tests]
  issues = '#16758'
  [continuous_eps]
    requirement = 'The system shall be able to solve a series of stages of continuous porosity changes with different schemes for computing the convective fluxes assuming piecewise constant data including'
    design = 'PCNSFVHLLC.md PCNSFVKT.md PNSFVPGradEpsilon.md PorousPrimitiveVarMaterial.md'
    [continuous_eps_kt]
      type = Exodiff
      input = implicit-euler-basic-kt-primitive.i
      exodiff = implicit-euler-basic-kt-primitive_out.e
      detail = 'the Kurganov-Tadmor scheme'
      recover = false # See https://github.com/idaholab/moose/issues/17906
      valgrind = HEAVY
    []
    [continuous_eps_hllc]
      type = Exodiff
      input = hllc.i
      exodiff = hllc_out.e
      detail = 'the HLLC scheme'
    []
  []
  [twod_y_channel_upwind_frictional_porosity_function]
    type = Exodiff
    input = rotated-2d-bkt-function-porosity.i
    exodiff = rotated-2d-bkt-function-porosity_out.e
    requirement = 'The system shall be able to solve a two-dimensional y-channel problem with frictional drag and a series of porosity jumps smoothed into a continuous porosity function, using the Kurganov-Tadmor scheme for computing intercell convective fluxes with upwind limiting interpolation (e.g. the + cell centroid value is used as the + side value at the face).'
    capabilities = 'mumps & method!=dbg'
    recover = false # See https://github.com/idaholab/moose/issues/17906
    valgrind = 'none'
    design = 'PCNSFVKT.md PNSFVPGradEpsilon.md PorousPrimitiveVarMaterial.md PCNSFVMomentumFriction.md'
  []
  [twod_y_channel_upwind_frictional_porosity_function_mixed]
    type = Exodiff
    input = rotated-2d-bkt-function-porosity-mixed.i
    exodiff = rotated-2d-bkt-function-porosity-mixed_out.e
    requirement = 'The system shall be able to solve a two-dimensional y-channel problem using a mixed variable set with frictional drag and a series of porosity jumps smoothed into a continuous porosity function, using the Kurganov-Tadmor scheme for computing intercell convective fluxes with upwind limiting interpolation (e.g. the + cell centroid value is used as the + side value at the face).'
    capabilities = 'mumps & method!=dbg'
    recover = false # See https://github.com/idaholab/moose/issues/17906
    valgrind = 'none'
    design = 'PCNSFVKT.md PNSFVPGradEpsilon.md PorousMixedVarMaterial.md PCNSFVMomentumFriction.md'
  []
  [deferred_correction]
    type = Exodiff
    input = dc.i
    exodiff = dc_out.e
    requirement = 'The system shall support the deferred correction algorithm for transitioning from low-order to high-order representations of the convective flux during a transient simulation.'
    abs_zero = 1e-8
    valgrind = HEAVY
    design = 'PCNSFVKTDC.md'
  []
[]
