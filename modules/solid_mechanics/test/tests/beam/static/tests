[Tests]
  design = "C0TimoshenkoBeam.md"
  issues = "#10313"
  [./timoshenko_small_strain_y]
    type = 'Exodiff'
    input = 'timoshenko_small_strain_y.i'
    exodiff = 'timoshenko_small_strain_y_out.e'
    verification = 'beam_vandv.md'
    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Timoshenko beam modeled using"
                  " beam elements under small deformations in the y direction."
  [../]
  [./timoshenko_small_strain_z]
    type = 'Exodiff'
    input = 'timoshenko_small_strain_z.i'
    exodiff = 'timoshenko_small_strain_z_out.e'

    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Timoshenko beam modeled using"
                  " beam elements under small deformations in the z direction."
  [../]
  [./euler_small_strain_y]
    type = 'Exodiff'
    input = 'euler_small_strain_y.i'
    exodiff = 'euler_small_strain_y_out.e'
    verification = 'beam_vandv.md'
    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Euler-Bernoulli beam modeled using"
                  " beam elements under small deformations in the y direction."
  [../]
  [./euler_small_strain_z]
    type = 'Exodiff'
    input = 'euler_small_strain_z.i'
    exodiff = 'euler_small_strain_z_out.e'

    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Euler-Bernoulli beam modeled using"
                  " beam elements under small deformations in the z direction."
  [../]
  [./euler_finite_rot_y]
    type = 'Exodiff'
    input = 'euler_finite_rot_y.i'
    exodiff = 'euler_finite_rot_y_out.e'
    verification = 'beam_vandv.md'
    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Euler-Bernoulli beam modeled using"
                  " beam elements under finite deformations in the y direction."
    capabilities = 'method!=dbg'
  [../]
  [./euler_finite_rot_z]
    type = 'Exodiff'
    input = 'euler_finite_rot_z.i'
    exodiff = 'euler_finite_rot_z_out.e'

    requirement = "The mechanics system shall accurately predict the"
                  " static bending response of a Euler-Bernoulli beam modeled using"
                  " beam elements under finite deformations in the z direction."
    capabilities = 'method!=dbg'
  [../]
  [./euler_small_y_with_action]
    type = 'Exodiff'
    input = 'euler_small_strain_y_action.i'
    exodiff = 'euler_small_strain_y_out.e'
    prereq = euler_small_strain_y

    requirement = "The LineElementAction class shall accurately create the objects"
                  " required to model the static bending response of an Euler-Bernoulli"
                  " beam modeled using beam elements under small deformations."
  [../]
  [./euler_finite_y_with_action]
    type = 'Exodiff'
    input = 'euler_finite_rot_y_action.i'
    exodiff = 'euler_finite_rot_y_out.e'
    prereq = euler_finite_rot_y

    requirement = "The LineElementAction class shall accurately create the objects"
                  " required to model the static bending response of an Euler-Bernoulli"
                  " beam modeled using beam elements under finite deformations."
  [../]
  [./euler_pipe_axial_disp]
    type = 'CSVDiff'
    input = 'euler_pipe_axial_disp.i'
    csvdiff = 'euler_pipe_axial_disp_out.csv'

    requirement = "The mechanics system shall accurately predict the axial displacement"
                  " of an Euler-Bernoulli pipe modeled using beam elements."
  [../]
  [./euler_pipe_axial_force]
    type = 'CSVDiff'
    input = 'euler_pipe_axial_force.i'
    csvdiff = 'euler_pipe_axial_force_out.csv'
    verification = 'beam_vandv.md'
    requirement = "The mechanics system shall accurately predict the axial forces"
                  " on an Euler-Bernoulli pipe modeled using beam elements."
  [../]
  [./euler_pipe_bend]
    type = 'CSVDiff'
    input = 'euler_pipe_bend.i'
    csvdiff = 'euler_pipe_bend_out.csv'

    requirement = "The mechanics system shall accurately predict the bending response"
                  " of an Euler-Bernoulli pipe modeled using beam elements."
  [../]
  [./error_displacements1]
     type = 'RunException'
     input = 'euler_small_strain_y.i'
     cli_args = 'Materials/strain/rotations="rot_x" Outputs/exodus=false Outputs/csv=false'
     expect_err = "ComputeIncrementalBeamStrain: The number of variables supplied in 'displacements' and 'rotations' must match."

     requirement = "The ComputeIncrementalBeamStrain class shall produce an error if"
                   " the number of supplied displacements and rotations do not match."
  [../]
  [./error_displacements2]
     type = 'RunException'
     input = 'euler_small_strain_y.i'
     cli_args = 'Kernels/solid_disp_x/rotations="rot_x" Outputs/exodus=false Outputs/csv=false'
     expect_err = "StressDivergenceBeam: The number of displacement and rotation variables should be same."

     requirement = "The StressDivergenceBeam class shall produce an error if the number"
                   " of supplied displacements and rotations do not match."
  [../]
  [./error_large_strain]
     type = 'RunException'
     input = 'euler_small_strain_y.i'
     cli_args = 'Materials/strain/large_strain=true Materials/strain/Ay=1.0 Outputs/exodus=false Outputs/csv=false'
     expect_err = 'ComputeIncrementalBeamStrain: Large strain calculation does not currently support asymmetric beam configurations with non-zero first or third moments of area.'

     requirement = "The ComputeIncrementalBeamStrain class shall produce an error"
                   " if large strain calculation is requested for asymmetric beam"
                   " configurations with non-zero first or third moments of area."
  [../]
  [./error_y_orientation]
    type = 'RunException'
    input = 'euler_small_strain_y.i'
    cli_args = 'Materials/strain/y_orientation="0.5 0.5 0.0" Outputs/exodus=false Outputs/csv=false'
    expect_err = 'ComputeIncrementalBeamStrain: y_orientation should be perpendicular to the axis of the beam.'

    requirement = "The ComputeIncrementalBeamStrain class shall produce an error if"
                  " the y orientation provided is not perpendicular to the beam axis."
  [../]
  [./torsion_1]
    type = 'Exodiff'
    input = 'torsion_1.i'
    exodiff = 'torsion_1_out.e'
    verification = 'beam_vandv.md'
    requirement = "The mechanics system shall accurately predict the torsional response"
                  " of a beam modeled using beam elements with auto-calculated polar moment of inertia."
  [../]
  [./torison_2]
    type = 'Exodiff'
    input = 'torsion_2.i'
    exodiff = 'torsion_2_out.e'

    requirement = "The mechanics system shall accurately predict the torsional response"
                  " of a beam modeled using beam elements with user provided polar moment of inertia."
  [../]
[]
