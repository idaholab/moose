[tests]
  [hht]
    type = 'Exodiff'
    input = 'hht_test.i'
    exodiff = 'hht_test_out.e'
    abs_zero = 1e-09

    requirement = "The mechanics system shall accurately predict the dynamic response of a linear "
                  "elastic system using Hilber-Hughes-Taylor (HHT) time integration."
    design = "Dynamics.md"
    issues = "#5559"
  []
  [hht_action]
    type = 'Exodiff'
    input = 'hht_test_action.i'
    exodiff = 'hht_test_action_out.e'
    abs_zero = 1e-09
    requirement = "The mechanics system shall accurately predict the dynamic response of a linear "
                  "elastic system using Hilber-Hughes-Taylor (HHT) time integration when using the "
                  "dynamic tensor mechanics action."
    design = "Dynamics.md"
    issues = "#18388"
  []
  [newmark]
    type = 'Exodiff'
    input = 'newmark.i'
    exodiff = 'newmark_out.e'
    abs_zero = 1e-09

    requirement = "The mechanics system shall accurately predict the dynamic response of a linear "
                  "elastic system using Newmark time integration."
    design = "Dynamics.md"
    issues = "#5559"
  []
  [newmark_action]
    type = 'Exodiff'
    input = 'newmark_action.i'
    exodiff = 'newmark_action_out.e'
    abs_zero = 1e-09

    requirement = "The mechanics system shall accurately predict the dynamic response of a linear "
                  "elastic system using Newmark time integration and the dynamic tensor mechanics "
                  "action."
    design = "Dynamics.md"
    issues = "#18388"
  []
  [hht_ti]
    type = 'Exodiff'
    input = 'hht_test_ti.i'
    exodiff = 'hht_test_out.e'
    abs_zero = 1e-09

    requirement = "The mechanics system shall accurately predict the dynamic response of a linear "
                  "elastic system using Hilber-Hughes-Taylor (HHT) time integration when velocity "
                  "and acceleration of the system are calculated using the Newmark-Beta time "
                  "integrator."
    design = "Dynamics.md"
    issues = "#12185"
  []

  [ad_newmark_action]
    type = 'Exodiff'
    input = 'newmark_action.i'
    exodiff = 'newmark_action_out.e'
    abs_zero = 1e-09

    cli_args = 'Physics/SolidMechanics/Dynamic/all/use_automatic_differentiation=true '
               'Materials/Elasticity_tensor/type=ADComputeElasticityTensor '
               'Materials/stress/type=ADComputeLinearElasticStress Executioner/solve_type=NEWTON'
    requirement = "The dynamic tensor mechanics action shall support automatic differentiation using "
                  "the Newmark-Beta time integrator."
    design = "Dynamics.md"
    issues = "#18687"
  []

  [direct_central_difference]
    type = 'Exodiff'
    input = 'direct_central_difference.i'
    exodiff = 'direct_central_difference_out.e'
    abs_zero = 1e-09
    requirement = "The solid mechanics app shall support a form of central difference time integration
                   that uses a direct calculation of the acceleration from the residual forces to 
                   perform a solution update."
    design = "DirectCentralDifference.md"
    issues = "#27833"
  []
  [direct_central_difference_varied_dt]
    type = 'Exodiff'
    input = 'direct_central_difference_varied_dt.i'
    exodiff = 'direct_central_difference_varied_dt_out.e'
    abs_zero = 1e-09
    requirement = "The solid mechanics app shall support a form of central difference time integration
                   that uses a direct calculation of the acceleration from the residual forces to 
                   perform a solution update. The direct central difference method should properly use 
                   a time step averaging method to handle non-constant time steps."
    design = "DirectCentralDifference.md"
    issues = "#27833"
  []
  [direct_central_difference_multiVarBC]
    type = 'Exodiff'
    input = 'direct_central_difference_multiVarBC.i'
    exodiff = 'direct_central_difference_multiVarBC_out.e'
    abs_zero = 1e-09
    requirement = "The solid mechanics app shall support dirichlet boundary conditions for direct central
                   difference time integration that correctly enforce constant and function boundary
                   conditions"
    design = "DirectCentralDifference.md"
    issues = "#27833"
  []
[]
