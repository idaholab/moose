[Tests]
  [gravity_test]
    type = Exodiff
    input = 'gravity_test.i'
    exodiff = 'gravity_test_out.e'
    requirement = 'The tensor mechanics module shall have the capability of applying a body force '
                  'term in the stress divergence equilibrium equation that accounts for the force of '
                  'gravity on a solid object due to its own weight.'
    design = 'Gravity.md'
    issues = '#4781'
  []
  [ad_gravity_test]
    type = Exodiff
    input = 'ad_gravity_test.i'
    exodiff = 'ad_gravity_test_out.e'
    requirement = 'The tensor mechanics module shall be able to reproduce gravity test results of '
                  'the hand-coded jacobian using automatic differentiation.'
    design = 'ADGravity.md'
    issues = '#13100'
  []
  [ad_gravity_test-jac]
    type = PetscJacobianTester
    input = 'ad_gravity_test.i'
    run_sim = 'True'
    ratio_tol = 1e-7
    difference_tol = 1e-4
    requirement = 'The Jacobian for the AD gravity problem shall be perfect'
    issues = '#13100'
    design = 'ADGravity.md'
    cli_args = "Outputs/active=''"
  []
  [material_vector_body_force]
    type = Exodiff
    input = 'material_vector_body_force.i'
    exodiff = 'material_vector_body_force_out.e'
    requirement = 'The system shall provide a way to apply a vector valued body force density to a '
                  'volume'
    issues = '#13100'
    design = 'MaterialVectorBodyForce.md'
  []
  [block-gravity-kinetic-energy]
    issues = '#19671'
    design = 'KineticEnergyAux.md'
    type = CSVDiff
    csvdiff = 'block-gravity-kinetic-energy_out.csv'
    input = 'block-gravity-kinetic-energy.i'
    requirement = 'The system shall provide a way to compute the system total kinetic energy through the '
                  'use of auxiliary kernels and postprocessors. This test verifies that a body falls '
                  'at the right acceleration under the action of gravity and that the computed '
                  'kinetic energy matches the analytical expression.'
    capabilities = 'method!=dbg'
  []
[]
