[Tests]
  design = 'HillCreepStressUpdate.md'
  issues = '#16016'
  [anis_mech_hill_tensor_creep_small_tiny_step_ts_limit_test]
    type = 'Exodiff'
    input = 'anis_mech_hill_tensor_creep_small_tiny_step_ts_limit_test.i'
    exodiff = 'anis_mech_hill_tensor_creep_small_tiny_step_ts_limit_test_out.e'
    min_parallel = 2
    custom_cmp = 'generalized.exodiff'
    requirement = 'The system shall avoid regression on material time step and combined anisotropic creep '
                  'computations'
  []
  [ad_aniso_creep_x_3d]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_x_3d.i'
    csvdiff = ad_aniso_creep_x_3d_out.csv
    requirement = 'The system shall be capable of reproducing verification results of creep strain ratios '
                  'along the X direction.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
  []
  [aniso_creep_x_3d]
    type = 'CSVDiff'
    input = 'aniso_creep_x_3d.i'
    csvdiff = aniso_creep_x_3d_out.csv
    requirement = 'The system shall be capable of reproducing verification results of creep strain ratios '
                  'along the X direction using hand-coded Jacobians.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
  []
  [ad_aniso_creep_x_3d_aniso_elasticity]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_x_3d_anisoElasticity.i'
    csvdiff = ad_aniso_creep_x_3d_anisoElasticity_out.csv
    requirement = 'The system shall reproduce the creep strain as those evaluated with '
                  'residual and derivative computations used for isotropic elasticity.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
    heavy = true
    max_time = 900 
  []
  [ad_aniso_creep_x_3d_shear]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_x_3d_shear.i'
    csvdiff = ad_aniso_creep_x_3d_shear_out.csv
    requirement = 'The system shall compute shear creep strain in an element subject to shear load in one direction.'
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
  []
  [ad_aniso_creep_xy_3d_shear]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_xy_3d_shear.i'
    csvdiff = ad_aniso_creep_xy_3d_shear_out.csv
    requirement = 'The system shall compute shear creep strain in an element subject to shear load in two directions.'
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
  []
  [ad_aniso_creep_xy_3d_aniso_elasticity]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_xy_3d_anisoElasticity.i'
    csvdiff = ad_aniso_creep_xy_3d_anisoElasticity_out.csv
    requirement = 'The system shall compute creep strains in an element with anisotropic elasticity and subject to biaxial tensile load.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
    heavy = true
    max_time = 900 
  []
  [aniso_creep_x_3d_no_trafo]
    type = 'CSVDiff'
    input = 'aniso_creep_x_3d.i'
    csvdiff = aniso_creep_x_3d_no_trafo_out.csv
    cli_args = "Materials/trial_creep_two/use_transformation=false Outputs/file_base=aniso_creep_x_3d_no_trafo_out"
    requirement = 'The system shall be capable of reproducing verification results of creep strain ratios '
                  'along the X direction using hand-coded Jacobians when no transformation is used to rotate '
                  'the Hill tensor for small deformation.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 5.0e-7
  []
  [ad_aniso_creep_y_3d]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_y_3d.i'
    csvdiff = ad_aniso_creep_y_3d_out.csv
    requirement = 'The system shall be capable of reproducing verification results of creep strain ratios '
                  'along the Y direction.'
    min_parallel = 2
    rel_err = 1.0e-5
    abs_zero = 1.0e-7
  []
  [ad_aniso_creep_z_3d]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_z_3d.i'
    csvdiff = ad_aniso_creep_z_3d_out.csv
    requirement = 'The system shall be capable of reproducing verification results of creep strain ratios '
                  'along the Z direction.'
    min_parallel = 2
    rel_err = 1.0e-5
    abs_zero = 1.0e-7
  []
  [ad_aniso_iso_iso]
    type = 'CSVDiff'
    input = 'ad_aniso_iso_creep_x_3d.i'
    csvdiff = ad_aniso_iso_creep_x_3d_out.csv
    cli_args = "Materials/elastic_strain/inelastic_models='trial_creep_iso' "
               "Materials/inactive='trial_creep_aniso_iso' "
               "Outputs/file_base=ad_aniso_iso_creep_x_3d_out"
    requirement = 'The system shall be capable of reproducing isotropic creep with the right anisotropic '
                  'creep parameters: Baseline'
    min_parallel = 2
    rel_err = 1.0e-5
    abs_zero = 1.0e-8
  []
  [jac_ad]
    type = 'PetscJacobianTester'
    input = 'ad_aniso_iso_creep_x_3d.i'
    run_sim = 'True'
    cli_args = "Executioner/num_steps=2 Outputs/active='' -snes_test_err 1e-12 "
               "Materials/elastic_strain/inelastic_models='trial_creep_iso' "
               "Materials/inactive='trial_creep_aniso_iso' "
               "Materials/elasticity_tensor/poissons_ratio=0.25"
    petsc_version = '>=3.9'
    ratio_tol = 1e-2
    difference_tol = 0.1
    only_final_jacobian = 'True'
    issues = '#17456'
    requirement = 'The system shall provide a perfect Jacobian while calculating large deformation '
                  'creep.'
  []
  [jac]
    type = 'PetscJacobianTester'
    input = 'aniso_iso_creep_x_3d.i'
    run_sim = 'True'
    cli_args = "Executioner/num_steps=2 Outputs/active='' -snes_test_err 1e-12 "
               "Materials/elastic_strain/inelastic_models='trial_creep_iso' "
               "Materials/inactive='trial_creep_aniso_iso' "
               "Materials/elasticity_tensor/poissons_ratio=0.25"
    petsc_version = '>=3.9'
    ratio_tol = 0.035
    difference_tol = 0.35
    only_final_jacobian = 'True'
    issues = '#21824'
    requirement = 'The system shall provide a reasonable Jacobian while calculating large deformation '
                  'creep using the elasticity tensor as the tangent operator.'
  []
  [ad_aniso_iso_aniso]
    type = 'CSVDiff'
    input = 'ad_aniso_iso_creep_x_3d.i'
    csvdiff = ad_aniso_iso_aniso_creep_x_3d_out.csv
    cli_args = "Materials/elastic_strain/inelastic_models='trial_creep_aniso_iso' "
               "Materials/inactive='trial_creep_iso' "
               "Outputs/file_base=ad_aniso_iso_aniso_creep_x_3d_out"
    requirement = 'The system shall be capable of reproducing isotropic creep with the right anisotropic '
                  'creep parameters.'
    min_parallel = 2
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
  []
  [aniso_creep_integration_error]
    type = 'CSVDiff'
    input = 'aniso_creep_integration_error.i'
    csvdiff = aniso_creep_integration_error_out.csv
    requirement = 'The system shall be capable of enforcing a time step such that the creep rate '
                  'integration error is controled by the user with the aid of a soft terminator when '
                  'regular (non-AD) objects are used.'
    heavy = true
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
  []

  [ad_aniso_creep_integration_error]
    type = 'CSVDiff'
    input = 'ad_aniso_creep_integration_error.i'
    csvdiff = ad_aniso_creep_integration_error_out.csv
    requirement = 'The system shall be capable of enforcing a time step such that the creep rate '
                  'integration error is controled by the user with the aid of a soft terminator.'
    heavy = true
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
  []
  [ad_aniso_creep_temperature_coefficients]
    type = 'Exodiff'
    input = 'ad_aniso_creep_temperature_coefficients.i'
    exodiff = ad_aniso_creep_temperature_coefficients_out.e
    requirement = 'The system shall be capable of running Hill materials with constant coefficients and '
                  'coefficients that are function of temperature to capture material texture. This '
                  'test performs a reference run with constant coefficients'
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
    heavy = true
  []
  [ad_aniso_creep_temperature_coefficients_function]
    type = 'Exodiff'
    input = 'ad_aniso_creep_temperature_coefficients_function.i'
    exodiff = ad_aniso_creep_temperature_coefficients_function_out.e
    custom_cmp = 'temperature.exodiff'
    requirement = 'The system shall be capable of running Hill materials with constant coefficients and '
                  'coefficients that are function of temperature to capture material texture. This '
                  'test performs a run using a constant temperature function.'
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
    heavy = true
  []
  [ad_aniso_creep_temperature_coefficients_function_variation]
    type = 'Exodiff'
    input = 'ad_aniso_creep_temperature_coefficients_function_variation.i'
    exodiff = ad_aniso_creep_temperature_coefficients_function_variation_out.e
    requirement = 'The system shall be capable of running anisotropic Hill creep with '
                  'temperature-dependent Hill coefficients and generating correct output.'
    rel_err = 1.0e-4
    abs_zero = 1.0e-8
    heavy = true
  []
  [3d_bar_orthotropic_90deg_rotation_ad_creep_z_no_rotation]
    type = 'CSVDiff'
    input = '3d_bar_orthotropic_90deg_rotation_ad_creep_z_no_rotation.i'
    csvdiff = 3d_bar_orthotropic_90deg_rotation_ad_creep_z_no_rotation_out.csv
    requirement = 'The system shall be capable of using large deformation rotation to update the '
                  'orientation of Hill parameters even when there is no rigid body rotation. This '
                  'test also serves as a reference to verify the updates to the Hill parameters when '
                  'there is significant rigid body motion'
    rel_err = 1.0e-3
    abs_zero = 1.0e-10
    heavy = true
  []
  [3d_bar_orthotropic_90deg_rotation_ad_creep_z]
    type = 'CSVDiff'
    input = '3d_bar_orthotropic_90deg_rotation_ad_creep_z.i'
    csvdiff = 3d_bar_orthotropic_90deg_rotation_ad_creep_z_out.csv
    requirement = 'The system shall be capable of using large deformation rotation to update the '
                  'orientation of Hill parameters when there is 90-degree rigid body orientation '
                  'change about the Z axis. The creep strains have to be very similar to the output '
                  'when there is no rigid body motion (Note: The mere constraints enforcing rigid '
                  'body rotation induce numerical errors). In this case using Hill constants.'
    rel_err = 2.0e-2
    abs_zero = 5.0e-10
    heavy = true
  []
  [3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation]
    type = 'CSVDiff'
    input = '3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation.i'
    csvdiff = 3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation_out.csv
    requirement = 'The system shall be capable of using large deformation rotation to update the '
                  'orientation of Hill parameters even when there is no rigid body rotation. This '
                  'test also serves as a reference to verify the updates to the Hill parameters when '
                  'there is significant rigid body motion'
    rel_err = 1.0e-3
    abs_zero = 1.0e-10
    heavy = true
  []
  [3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation_no_transformation]
    type = 'CSVDiff'
    input = '3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation.i'
    csvdiff = 3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation_no_transformation_out.csv
    cli_args = "Materials/hill_tensor/use_large_rotation=false "
               "Materials/trial_creep/use_transformation=false "
               "Outputs/file_base=3d_bar_orthotropic_90deg_rotation_ad_creep_x_no_rotation_no_transfo"
               "rmation_out"
    requirement = 'The system shall be capable of not using large deformation rotation to define '
                  'Hill anisotropic parameters. '
    rel_err = 1.0e-3
    abs_zero = 1.0e-10
    heavy = true
  []
  [3d_bar_orthotropic_90deg_rotation_ad_creep_x]
    type = 'CSVDiff'
    input = '3d_bar_orthotropic_90deg_rotation_ad_creep_x.i'
    csvdiff = 3d_bar_orthotropic_90deg_rotation_ad_creep_x_out.csv
    requirement = 'The system shall be capable of using large deformation rotation to update the '
                  'orientation of Hill parameters when there is 90-degree rigid body orientation '
                  'change about the X axis. The creep strains have to be very similar to the output '
                  'when there is no rigid body motion (Note: The mere constraints enforcing rigid '
                  'body rotation induce numerical errors). In this case using Hill constants.'
    rel_err = 2.0e-2
    abs_zero = 5.0e-10
    heavy = true
  []
[]
