[Tests]
  design = 'syntax/DomainIntegral/index.md'
  [test_jthermal]
    type = 'Exodiff'
    input = 'j_integral_2d.i'
    exodiff = 'j_integral_2d_out.e'
    custom_cmp = 'j_integral_2d.cmp'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the J integral for problems in 2D coupled with thermal effects.'
    issues = '#3807 #10232'
    capabilities = 'method!=dbg'
  []
  [c_integral_2d]
    type = 'Exodiff'
    input = 'c_integral_2d.i'
    exodiff = 'c_integral_2d_out.e'
    custom_cmp = 'c_integral_2d.cmp'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the C integral for problems in 2D coupled with thermal effects.'
    issues = '#3807 #10232'
    capabilities = 'method!=dbg'
  []
  [test_iithermal]
    type = 'CSVDiff'
    input = 'interaction_integral_2d.i'
    csvdiff = 'interaction_integral_2d_out.csv'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the interaction integral for problems in 2D coupled with thermal effects.'
    issues = '#7527 #9966'
    capabilities = 'method!=dbg'
  []
  [test_iithermal_generic]
    type = 'CSVDiff'
    input = 'interaction_integral_2d_thermal_generic.i'
    csvdiff = 'interaction_integral_2d_thermal_generic_out.csv'
    requirement = 'The domain integral action shall compute the stress intensity factor using the interaction integral approach for a problem dominated by thermal strains using an approach that integrates eigenstrain gradients in a general manner.'
    issues = '#26452'
    capabilities = 'method!=dbg'
  []
  [test_ii_arb_eig_grad]
    type = 'CSVDiff'
    input = 'interaction_integral_2d_eig_grad.i'
    csvdiff = 'interaction_integral_2d_eig_grad_out.csv'
    requirement = 'The interaction integral shall account for the contributions of the gradients of arbitrary eigenstrains in 2D'
    allow_test_objects = true
    issues = '#18804'
  []
  [test_ii_arb_eig_grad_err_jint]
    prereq = test_ii_arb_eig_grad
    type = 'RunException'
    input = 'interaction_integral_2d_eig_grad.i'
    cli_args = "DomainIntegral/integrals='JIntegral InteractionIntegralKI'"
    expect_err = "'eigenstrain_gradient' cannot be specified when the computed integrals include "
                 "JIntegral, CIntegral, or KFromJIntegral"
    requirement = 'The DomainIntegralAction shall generate an error if a user specifies the eigenstrain gradient and also request the J integral'
    allow_test_objects = true
    issues = '#18804'
  []
  [test_ii_arb_eig_grad_err_temp]
    prereq = test_ii_arb_eig_grad_err_jint
    type = 'RunException'
    input = 'interaction_integral_2d_eig_grad.i'
    cli_args = "DomainIntegral/temperature=temp DomainIntegral/eigenstrain_names=thermal_expansion"
    expect_err = "'eigenstrain_gradient' cannot be specified together with 'temperature' or "
                 "'eigenstrain_names'. These are for separate, mutually exclusive systems for "
                 "including the effect of eigenstrains"
    requirement = 'The DomainIntegralAction shall generate an error if a user specifies the temperature and also provides the eigenstrain_gradient'
    allow_test_objects = true
    issues = '#18804'
  []
  [test_ii_bf]
    type = 'CSVDiff'
    input = 'interaction_integral_2d_bf.i'
    csvdiff = 'interaction_integral_2d_bf_out.csv'
    requirement = 'The interaction integral shall account for the contributions of body forces in 2D'
    issues = '#18804'
  []
  [test_ii_bf_err_jint]
    prereq = test_ii_bf
    type = 'RunException'
    input = 'interaction_integral_2d_bf.i'
    cli_args = "DomainIntegral/integrals='JIntegral InteractionIntegralKI'"
    expect_err = "'body_force' cannot be specified when the computed integrals include JIntegral, "
                 "CIntegral, or KFromJIntegral"
    requirement = 'The DomainIntegralAction shall generate an error if a user specifies the body force and also request the J integral'
    issues = '#18804'
  []
  [test_iithermal_rot]
    type = 'CSVDiff'
    input = 'interaction_integral_2d_rot.i'
    csvdiff = 'interaction_integral_2d_rot_out.csv'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the interaction integral for problems in any plane for 2D.'
    issues = '#7527 #9966'
    capabilities = 'method!=dbg'
  []
  [interaction_integral_2d_c]
    type = 'Exodiff'
    input = 'interaction_integral_2d_c.i'
    exodiff = 'interaction_integral_2d_c_out.e'
    custom_cmp = 'interaction_integral_2d_c.cmp'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the C(t) integral for problems in 2D.'
    issues = '#7527 #9966'
    capabilities = 'method!=dbg'
  []
  [test_jthermal_ctefunc]
    type = 'CSVDiff'
    input = 'j_integral_2d_ctefunc.i'
    csvdiff = 'j_integral_2d_ctefunc_out.csv'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the J integral for problems in 2D using the thermal expansion function eigenstrain.'
    issues = '#3807 #10232'
    capabilities = 'method!=dbg'
  []
  [test_jthermal_mean_ctefunc]
    type = 'CSVDiff'
    input = 'j_integral_2d_mean_ctefunc.i'
    csvdiff = 'j_integral_2d_mean_ctefunc_out.csv'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the J integral for problems in 2D using the mean thermal expansion function eigenstrain.'
    issues = '#3807 #10232'
    capabilities = 'method!=dbg'
  []
  [test_jthermal_inst_ctefunc]
    type = 'CSVDiff'
    input = 'j_integral_2d_inst_ctefunc.i'
    csvdiff = 'j_integral_2d_inst_ctefunc_out.csv'
    requirement = 'The domain integral action shall compute all of the fracture domain integrals including the J integral for problems in 2D using the instantaneous thermal expansion function eigenstrain.'
    issues = '#3807 #10232'
    capabilities = 'method!=dbg'
  []
[]
