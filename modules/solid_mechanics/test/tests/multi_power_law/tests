[Tests]
  issues = '#18850'
  design = 'ADMultiplePowerLawCreepStressUpdate.md'
  [powerlaw]
    type = 'Exodiff'
    input = 'power_law_creep.i'
    exodiff = 'power_law_creep_out.e'
    valgrind = HEAVY
    requirement = "The AD multiple power law creep must reproduce the results of the AD single power "
                  "law creep: Reference results."
    capabilities = 'method!=dbg'
  []
  [multipowerlaw]
    type = 'Exodiff'
    input = 'power_law_creep.i'
    exodiff = 'multi_power_law_creep_out.e'
    cli_args= "Materials/creep_one/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_one/stress_thresholds='0 999999999999'
              Materials/creep_nine/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_nine/stress_thresholds='0 999999999999'
               Outputs/file_base=multi_power_law_creep_out"
    valgrind = HEAVY
    requirement = "The AD multiple power law creep must reproduce the results of the AD single power "
                  "law creep when a single stress increment is provided by the user."
    capabilities = 'method!=dbg'
  []
  [multipowerlaw_two_intervals]
    type = 'Exodiff'
    input = 'power_law_creep.i'
    exodiff = 'multipowerlaw_two_intervals_out.e'
    cli_args= "Materials/creep_one/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_one/stress_thresholds='0 42000 300000' Materials/creep_one/coefficient='1e-24 1e-24' Materials/creep_one/n_exponent='4 4' Materials/creep_one/m_exponent='0 0' Materials/creep_one/activation_energy='0 0'
              Materials/creep_nine/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_nine/stress_thresholds='0 42000 300000' Materials/creep_nine/coefficient='9e-24 9e-24' Materials/creep_nine/n_exponent='4 4' Materials/creep_nine/m_exponent='0 0' Materials/creep_nine/activation_energy='0 0'
              Outputs/file_base=multipowerlaw_two_intervals_out"
    valgrind = HEAVY
    requirement = "The AD multiple power law creep must reproduce the results of the AD single power "
                  "law creep with multiple stress intervals with same power law material parameters."
    capabilities = 'method!=dbg'
  []
  [multipowerlaw_two_intervals_no_continuity]
    type = 'Exodiff'
    input = 'power_law_creep.i'
    exodiff = 'multi_power_law_creep_two_intervals_different_no_continuity_out.e'
    cli_args= "Materials/creep_one/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_one/stress_thresholds='0 53000 300000' Materials/creep_one/coefficient='1e-24 1.92307692e-29' Materials/creep_one/n_exponent='4 9.0' Materials/creep_one/m_exponent='0 0' Materials/creep_one/activation_energy='0 0'
              Materials/creep_nine/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_nine/stress_thresholds='0 53000 300000' Materials/creep_nine/coefficient='9e-24 3.32840237e-33' Materials/creep_nine/n_exponent='4 9.0' Materials/creep_nine/m_exponent='0 0' Materials/creep_nine/activation_energy='0 0'
              Outputs/file_base=multi_power_law_creep_two_intervals_different_no_continuity_out"
    abs_zero = 1.0e-4
    rel_err = 5.0e-4
    requirement = "The AD multiple power law creep must avoid regression for a simple few-element problem whose solution has stress levels encompassing two different sets of power law parameters"
    capabilities = 'method!=dbg'
  []
  [multipowerlaw_user_input_error]
    type = 'RunException'
    input = 'power_law_creep.i'
    expect_err = 'Stress thresholds input must be provided in increasing ordered'
    cli_args= "Materials/creep_one/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_one/stress_thresholds='0 53000 52000' Materials/creep_one/coefficient='1e-24 1.92307692e-29' Materials/creep_one/n_exponent='4 9.0' Materials/creep_one/m_exponent='0 0' Materials/creep_one/activation_energy='0 0'
              Materials/creep_nine/type=ADMultiplePowerLawCreepStressUpdate Materials/creep_nine/stress_thresholds='0 53000 300000' Materials/creep_nine/coefficient='9e-24 3.32840237e-33' Materials/creep_nine/n_exponent='4 9.0' Materials/creep_nine/m_exponent='0 0' Materials/creep_nine/activation_energy='0 0'
              Outputs/file_base=multi_power_law_creep_two_intervals_different_no_continuity_out"

    requirement = "Stress thresholds must be provided in increasing order, otherwise an error will inform the user of such a requirement. "
    capabilities = 'method!=dbg'
  []
[]
