[Tests]
  [gradient_l2_regularization]
    design = 'ParameterMeshOptimization.md'
    requirement = "The system shall support L2 gradient regularization for parameter mesh "
                  "optimization to enforce smoothness in parameter fields while preserving solution "
                  "accuracy "
    issues = '#30897'
    [mesh]
      type = CheckFiles
      input = initial_param_mesh.i
      check_files = initial_param_mesh_in.e
      recover = False
      detail = 'by first creating a mesh containing the data needed for optimization on a mesh;'
    []
    [input_file_ICs]
      type = 'Exodiff'
      input = 'main.i optimizationReporterInputIC.i'
      rel_err = 1e-3 # we have a low gradient tolerance
      abs_zero = 1e-5
      exodiff = 'optimizationReporterInputIC_out_forward_and_adjoint0.e'
      # Optimize executioner does not support multiple threads
      max_threads = 1
      recover = False
      detail = " with initial conditions read from the input file;"
    []
    [mesh_ICs]
      prereq = 'gradient_l2_regularization/mesh'
      type = 'Exodiff'
      input = 'main.i optimizationReporterMeshIC.i'
      rel_err = 1e-3 # we have a low gradient tolerance
      abs_zero = 1e-5
      exodiff = 'optimizationReporterMeshIC_out_forward_and_adjoint0.e'
      # Optimize executioner does not support multiple threads
      max_threads = 1
      recover = False
      detail = " with initial conditions read from the mesh."
    []
  []

  [regularization_errors]
    design = 'ParameterMeshOptimization.md'
    issues = '#30897'
    requirement = "The system shall throw an error when regularization parameters are incorrectly "
                  "specified"

    [mismatched_coeffs_types]
      type = 'RunException'
      input = 'main.i optimizationReporterInputIC.i'
      cli_args = 'OptimizationReporter/regularization_types="L2_GRADIENT L2_GRADIENT"
                  OptimizationReporter/regularization_coeffs="0.1"'
      # Optimize executioner does not support multiple threads
      max_threads = 1
      expect_err = 'Number of regularization coefficients \(1\) must match number of regularization types \(2\)'
      detail = "when the number of regularization coefficients doesn't match the number of "
               "regularization types;"
    []

    [invalid_regularization_type]
      type = 'RunException'
      input = 'main.i optimizationReporterInputIC.i'
      cli_args = 'OptimizationReporter/regularization_types="INVALID_TYPE"
                  OptimizationReporter/regularization_coeffs="0.1"'
      # Optimize executioner does not support multiple threads
      max_threads = 1
      expect_err = 'Invalid option "INVALID_TYPE" in MultiMooseEnum'
      detail = "when an invalid regularization type is specified;"
    []

    [empty_coeffs_with_types]
      type = 'RunException'
      input = 'main.i optimizationReporterInputIC.i'
      cli_args = 'OptimizationReporter/regularization_types="L2_GRADIENT"
                  OptimizationReporter/regularization_coeffs=""'
      # Optimize executioner does not support multiple threads
      max_threads = 1
      expect_err = 'Number of regularization coefficients \(0\) must match number of regularization types \(1\)'
      detail = "when regularization types are specified but no coefficients are provided;"
    []
  []
[]
