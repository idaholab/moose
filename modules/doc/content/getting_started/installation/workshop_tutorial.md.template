## Run an Example

!style! halign=left
A MOOSE installation binary comes with several examples you can run to make sure everything is
sound, as well as moving some of the example inputs into a safe location you can play with.
!style-end!

You may query the executable for the available inputs with the following:

```bash
moose-opt --show-copyable-inputs
```

which will show something like this:

```
The following directories are installable into a user-writeable directory:

chemical_reactions combined contact electromagnetics external_petsc_solver fluid_properties framework fsi functional_expansion_tools geochemistry heat_transfer level_set misc navier_stokes optimization peridynamics phase_field porous_flow ray_tracing rdg reactor reactor_tutorial richards scalar_transport solid_mechanics solid_properties stochastic_tools tensor_mechanics thermal_hydraulics xfem

To install one or more directories of inputs, execute the binary with the "--copy-inputs" flag. e.g.:
$ moose-opt --copy-inputs chemical_reactions
```

For now, lets copy `{{TUTORIAL}}` into a safe location for editing:

```bash
mkdir -p ~/projects/examples
cd ~/projects/examples
moose-opt --copy-inputs {{TUTORIAL}}
  <output trimmed>
Directory successfully copied into ./moose/{{TUTORIAL}}/
```

With {{TUTORIAL}}'s examples and inputs copied, move into the {{TUTORIAL}} directory and
instruct `moose` to run the tests:

```bash
cd ./moose/{{TUTORIAL}}
moose-opt --run -j 6
```

Testing will commence and take a few moments to finish. There may be several skipped tests for one
reason or another. This is normal. However none of the tests should fail.

Next, we will run a single input file manually, to demonstrate how you will ultimately use `moose-opt`.
Peruse the subdirectories and find an input file you wish to run:

!alert! tip
You can list all available input files by running:

```bash
# be sure to be in the {{TUTORIAL}}'s directory
find . -name '*.i'
```

!alert-end!

```bash
# cd into the directory containing the input file you wish to run
moose-opt -i <the input file you chose>.i --mesh-only
```

You will see some information scroll by, and ultimately end back at your prompt. If you perform a
directory listing (`ls`) you should see an exodus file was generated in the process (a file with the
same input filename but with `_in.e` suffix).

