[Tests]
  design = 'DiscreteLineSegmentInterface.md'
  issues = '#21818'

  [compute_axial_coordinate]
    type = Exodiff
    input = 'discrete_line_segment_interface.i'
    exodiff = 'axial_coord.e'
    allow_test_objects = true
    # 0 time steps taken
    recover = false
    restep = false

    requirement = 'The system shall provide an interface to compute an axial coordinate from an arbitrary spatial point.'
  []
  [compute_radial_coordinate]
    type = Exodiff
    input = 'discrete_line_segment_interface.i'
    cli_args = "
      AuxKernels/testvar_aux/test_type=radial_coord
      Outputs/file_base=radial_coord"
    exodiff = 'radial_coord.e'
    allow_test_objects = true
    # 0 time steps taken
    recover = false
    restep = false

    requirement = 'The system shall provide an interface to compute a radial coordinate from an arbitrary spatial point.'
  []
  [get_axial_section_index]
    type = Exodiff
    input = 'discrete_line_segment_interface.i'
    cli_args = "
      AuxKernels/testvar_aux/test_type=axial_section_index
      Outputs/file_base=axial_section_index"
    exodiff = 'axial_section_index.e'
    allow_test_objects = true
    # 0 time steps taken
    recover = false
    restep = false

    requirement = 'The system shall provide an interface to get the axial section index for an arbitrary spatial point.'
  []
  [get_axial_element_index]
    type = Exodiff
    input = 'discrete_line_segment_interface.i'
    cli_args = "
      AuxVariables/testvar/family=MONOMIAL
      AuxVariables/testvar/order=CONSTANT
      AuxKernels/testvar_aux/test_type=axial_element_index
      Executioner/Quadrature/type=MONOMIAL
      Executioner/Quadrature/order=CONSTANT
      Outputs/file_base=axial_element_index"
    exodiff = 'axial_element_index.e'
    allow_test_objects = true
    # 0 time steps taken
    recover = false
    restep = false

    requirement = 'The system shall provide an interface to get the axial element index for an arbitrary spatial point.'
  []

  [error_reporting]
    requirement = 'The system shall report an error for the discrete line segment interface'

    [compute_axial_coordinate_invalid_axial_coord]
      type = RunException
      input = 'discrete_line_segment_interface.i'
      cli_args = "AuxKernels/testvar_aux/length='1 2 3'"
      expect_err = "testvar_aux: The point \(x,y,z\)=\(.*\) has an invalid axial coordinate \(.*\). Valid axial coordinates are in the range \(0,6\)."
      allow_test_objects = true

      detail = 'if an invalid axial coordinate is provided.'
    []
    [length_n_elems_size_mismatch]
      type = RunException
      input = 'discrete_line_segment_interface.i'
      cli_args = "AuxKernels/testvar_aux/length=10.0"
      expect_err = "The parameters 'length' and 'n_elems' must have the same number of entries"
      allow_test_objects = true

      detail = 'if the number of lengths and element counts do not match.'
    []
  []
[]
