[Tests]
  design = 'ShaftConnectedPump1Phase.md'
  issues = '#19833'

  # mass and energy conservation
  [phy:mass_energy_conservation]
    type = 'CSVDiff'
    input = 'shaft_motor_pump.i'
    csvdiff = 'shaft_motor_pump_out.csv'
    cli_args = "Outputs/out/type=CSV Outputs/out/execute_on=final Outputs/out/show='mass_conservation energy_conservation'"
    abs_zero = 1e-8
    rel_err = 0
    max_parallel = 14 # https://github.com/idaholab/moose/issues/24533

    requirement = 'The system shall conserve mass and energy when using ShaftConnectedPump1Phase.'
  []

  [phy:loop]
    type = 'Exodiff'
    input = 'shaft_motor_pump.i'
    exodiff = 'shaft_motor_pump_out.e'
    rel_err = 1e-3
    abs_zero = 1e-9
    cli_args = 'Outputs/exodus=true'
    prereq = 'phy:mass_energy_conservation' # recover testing uses same output file
    max_parallel = 14 # https://github.com/idaholab/moose/issues/24533

    requirement = 'The system shall be able to model a pump with ShaftConnectedPump1Phase.'
  []

  [phy:coastdown]
    type = CSVDiff
    input = 'pump_coastdown.i'
    csvdiff = 'pump_coastdown.csv'
    rel_err = 1e-3
    abs_zero = 1e-9
    heavy = true

    requirement = 'The system shall be able to model a pump coastdown with ShaftConnectedPump1Phase.'
  []

  # jacobian test
  [jacobian]
    type = 'PetscJacobianTester'
    input = 'jacobian.i'
    ratio_tol = 1e-7
    difference_tol = 50
    cli_args = 'Debug/check_jacobian=true'
    allow_test_objects = true
    max_threads = 1
    max_parallel = 1

    requirement = 'The system shall correctly compute Jacobians for ShaftConnectedPump1Phase.'
  []

  [err:not_connected_to_shaft]
    type = 'RunException'
    input = 'shaft_motor_pump.i'
    cli_args = "Components/shaft/connected_components=''"
    expect_err = "This component must be connected to a shaft"

    requirement = 'The system shall throw an error if ShaftConnectedPump1Phase is not connected to a shaft component.'
    issues = '#19833 #19998'
  []
[]
