[Tests]
  design = 'HSCoupler2D3D.md'
  issues = '#23059 #27830'

  [check_input_mesh]
    type = RunApp
    input = mesh.i
    cli_args = '--mesh-only mesh.e'
    recover = False # No recover for --mesh-only
    requirement = 'The system shall have correct input for the HSCoupler2D3D test mesh.'
  []

  [test]
    requirement = 'The system shall couple a 2D heat structure with a 3D heat structure'

    [conduction_plus_radiation]
      type = Exodiff
      input = hs_coupler_2d3d.i
      cli_args = "
        Components/hs_coupler/include_radiation=true
        Components/hs_coupler/emissivity_2d=0.4
        Components/hs_coupler/emissivity_3d=0.6
        Outputs/file_base=conduction_plus_radiation"
      exodiff = conduction_plus_radiation.e
      restep = false # Test is prescribed to abort on failed timestep
      detail = 'using conduction and radiation.'
    []
    [conduction_only]
      type = Exodiff
      input = hs_coupler_2d3d.i
      cli_args = 'Outputs/file_base=conduction_only'
      exodiff = conduction_only.e
      restep = false # Test is prescribed to abort on failed timestep
      detail = 'using conduction only.'
    []
    [convection_only]
      type = Exodiff
      input = hs_coupler_2d3d.i
      cli_args = "
        Components/hs_coupler/gap_thermal_conductivity=0
        Components/hs_coupler/gap_htc=100
        Outputs/file_base=convection_only"
      exodiff = convection_only.e
      restep = false # Test is prescribed to abort on failed timestep
      detail = 'using convection only.'
    []
  []

  [error_reporting]
    requirement = 'The system shall report an error for HSCoupler2D3D'

    [nonexistent_hs2d_component]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/heat_structure_2d=foo'
      expect_err = "There is no 2D cylindrical heat structure with the name 'foo'"
      detail = 'If the 2D heat structure does not exist.'
    []
    [nonexistent_hs3d_component]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/heat_structure_3d=foo'
      expect_err = "There is no 3D heat structure with the name 'foo'"
      detail = 'If the 3D heat structure does not exist.'
    []
    [nonexistent_hs2d_boundary]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/boundary_2d=foo'
      expect_err = "The heat structure 'hs2d' does not have the boundary 'foo'"
      detail = 'If the 2D heat structure boundary does not exist.'
    []
    [nonexistent_hs3d_boundary]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/boundary_3d=foo'
      expect_err = "The heat structure 'hs3d' does not have the boundary 'foo'"
      detail = 'If the 3D heat structure boundary does not exist.'
    []
    [misaligned_meshes]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs2d/orientation="1 0 0"'
      expect_err = 'The meshes of the heat structures are not aligned'
      detail = 'If the meshes of the heat structures are not aligned.'
    []
    [exceeded_max_ad_container_size]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs3d/file=mesh/mesh_fine.e'
      expect_err = 'MOOSE must be configured with a larger AD container size'
      capabilities = 'ad_size<=55'
      detail = 'If the max AD container size is predicted to be exceeded.'
    []
    [zero_gap_size]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/gap_thickness=0'
      expect_err = 'Gap thickness must be > 0.'
      detail = 'If the gap thickness is less than or equal to zero.'
    []
    [radiation_missing_emissivities]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/include_radiation=true'
      expect_err = "If 'include_radiation' is 'true', then 'emissivity_2d' and 'emissivity_3d' are required."
      detail = 'If radiation is specified to be included but the emissivities are not provided.'
    []
    [no_radiation_but_provided_emissivity]
      type = RunException
      input = hs_coupler_2d3d.i
      cli_args = 'Components/hs_coupler/emissivity_2d=0.4'
      expect_err = "If 'include_radiation' is 'false', then neither 'emissivity_2d' nor 'emissivity_3d' can be specified."
      detail = 'If radiation is specified to not be included but an emissivity is provided.'
    []
  []
[]
